# Application.config file for Webware for Python

# The password for the Admin context:
AdminPassword = 'riverbed' # you cannot log in with an empty password

PrintConfigAtStartUp = True

# Servlets to be used as directory index in search order:
DirectoryFile = [
    'index', 'Index', 'main', 'Main'
    ]
# The following extensions will be ignored:
# robin: removed '.pyc', 
ExtensionsToIgnore = [
    '.pyo', '.tmpl', '.bak', '.py_bak', 
    '.py~', '.psp~', '.kid~', '.html~', '.tmpl~'
    ]
# If specified, only extensions in this list will be served:
ExtensionsToServe = [] # no limitation
UseCascadingExtensions = True
ExtensionCascadeOrder = ['.py', '.psp', '.kid', '.html']
# Files matching these patterns will be ignored:
# robin: removed '*.pyc', 
FilesToHide = [
    '.*', '*~', '*.bak', '*.py_bak', '*.tmpl',
    '*.pyo', '__init__.*', '*.config'
    ]
# If specified, only files matching these patterns will be served:
FilesToServe = [] # no limitation

LogActivity = False
ActivityLogFilename = 'Logs/Activity.csv'
ActivityLogColumns = [
  'request.remoteAddress', 'request.method', 'request.uri',
  'response.size', 'servlet.name', 'request.timeStamp',
  'transaction.duration', 'transaction.errorOccurred'
  ]

Contexts = {}
#Contexts['Admin'] = WebKitPath + '/Admin'
#Contexts['Examples'] = WebKitPath + '/Examples'
#Contexts['Testing'] = WebKitPath + '/Testing'
#Contexts['Docs'] = WebwarePath + '/Docs'
#Contexts['CGIWrapper/Docs'] = WebwarePath + '/CGIWrapper/Docs'
#Contexts['COMKit/Docs'] = WebwarePath + '/COMKit/Docs'
#Contexts['KidKit/Docs'] = WebwarePath + '/KidKit/Docs'
#Contexts['MiddleKit/Docs'] = WebwarePath + '/MiddleKit/Docs'
#Contexts['MiscUtils/Docs'] = WebwarePath + '/MiscUtils/Docs'
#Contexts['PSP/Docs'] = WebwarePath + '/PSP/Docs'
#Contexts['TaskKit/Docs'] = WebwarePath + '/TaskKit/Docs'
#Contexts['UserKit/Docs'] = WebwarePath + '/UserKit/Docs'
#Contexts['WebKit/Docs'] = WebwarePath + '/WebKit/Docs'
#Contexts['WebUtils/Docs'] = WebwarePath + '/WebUtils/Docs'
#Contexts['Mgmt'] = 'Mgmt'
Contexts['default'] = 'Mgmt'

# SessionStore = 'Dynamic' # can be File or Dynamic or Memory
# XXX/robin Dynamic causes periodic pickling to File;
#           Pickling proceeds recursively through all object
#           associated with the Session, but it cannot pickle
#           a thread.lock object, so the entire pickle dump fails.
#           SessionStore apparently wipes the session out of memory anyway,
#           resulting in a dropped session and auto logout.
#
#           Instead, implement our won session store that is pure Memory,
#           no file backing store, that implements both our notion of
#           /wsm/session_timeout and /wsm/inactivity_timeout.
#
#           Normally SessionTimeout below configures both sweep interval
#           and inactivity timeout. With RBT, it only sets the former.
#           SessionTimeout is in tenths of a minute.
#           Don't know why. Ask the webware authors.
SessionStore = 'SessionRBTStore' # can be File, Dynamic, Memory,
                                 # or our own SessionRBTStore
SessionStoreDir = 'Sessions'
# SessionTimeout is in tenths of a minute, ei. 1 means 6 seconds.
SessionTimeout = 10 # Default 60.
SessionPrefix = None # no prefix for session IDs
SessionName = '_SID_' # name of the field holding the session ID
# Module and class name for Session class
SessionModule = 'RBTSession'
# Maximum number of sessions in memory:
MaxDynamicMemorySessions = 10000
# Time in minutes when to move sessions from memory to disk:
DynamicSessionTimeout = 15
# The session ID can be prefixed with "hostname" or any other string:
SessionPrefix = None # no prefix to session ID
IgnoreInvalidSession = True
UseAutomaticPathSessions = False
UseCookieSessions = True
# If you rewrite the URL, you may need to specify this explicitly:
SessionCookiePath = None # the servlet path is used if not specified
SecureSessionCookie = True # use a secure cookie for HTTPS connections

# Set this to True to allow extra path info to be attached to URLs
#
# robin:
# In particular, set this to True to allow arbitrary final path members
# to map to a DirectoryFile.
# Eg. if a url ends in /alias/Foo, and /alias maps to /contextDir,
# and /contextDir contains no Foo*, then
# if ExtrPathInfo is True, map it to /contextDir/Main.py (or whatever
# your DirectoryFile names as directory indices);
# Otherwise, rase a 404 Not Found error.
# ExtraPathInfo = False # no extra path info
ExtraPathInfo = True

# Caching:
CacheServletClasses = True # set to False for debugging
CacheServletInstances = True # set to False for debugging
CacheDir = '/var/opt/tms/web/Cache'
# Set to True to clear the PSP cache on disk when the AppServer starts:
ClearPSPCacheOnStart = False
# The default output method for Kid. Some possible values are:
# html, html-strict, xhtml, xhtml-strict, xml
KidOutputMethod = 'html'
# The default output format for Kid. Some possible values are:
# default, compact, newlines, pretty, wrap, nice, ugly, named
KidOutputFormat = 'default'
# Set to False if you do not want compiled Kid templates to be cached on disk:
CacheKidTemplates = True
# Set to True if you want to use a separate KidKit file cache for the servlets,
# otherwise let Kid cache the compiled modules along with the templates.
UseKidKitCache = False
# The following two options are only applicable if the separate cache is used.
# Set to True if you want to store the source in the cache directory as well:
CacheKidSource = True
# Set to True to clear the Kid cache on disk when the AppServer starts:
ClearKidCacheOnStart = False

# Error handling:
ShowDebugInfoOnErrors = True
IncludeFancyTraceback = False
EnterDebuggerOnException = False
IncludeEditLink = True
FancyTracebackContext = 5
UserErrorMessage = '''
The site is having technical difficulties with this page. An error has
been logged, and the problem will be fixed as soon as possible. Sorry!
'''
LogErrors = False
ErrorLogFilename = 'Logs/Errors.csv'
SaveErrorMessages = False
ErrorMessagesDir = 'ErrorMsgs'
# Enable Error-Emails:
EmailErrors = False
# Be sure to review the following settings when enabling error e-mails:
ErrorEmailServer = 'localhost'
EmailErrorReportAsAttachment = False
ErrorEmailHeaders = {
    'From': 'webware@mydomain',
    'To': ['webware@mydomain'],
    'Reply-to': 'webware@mydomain',
    'Content-type': 'text/html',
    'Subject': '[WebKit Error]',
    }
ErrorPage = None # read the documentation on how to create custom error pages
MaxValueLengthInExceptionReport = 500
RPCExceptionReturn = 'traceback' # can be occurred, exception or traceback
# Set to False if you don't want to have exceptions in RPC servlets be reported
# in the logs and/or by email:
ReportRPCExceptionsInWebKit = True

UnknownFileTypes = {
    'ReuseServlets': True,
    'Technique': 'serveContent', # can be serveContent or redirectSansAdapter
    'CacheContent': False,
    'MaxCacheContentSize': 128*1024,
    'ReadBufferSize': 32*1024
    }
