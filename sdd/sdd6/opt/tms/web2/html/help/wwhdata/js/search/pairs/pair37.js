function FileData_Pairs(x)
{
x.t("equal","greater");
x.t("deployments","riverbed");
x.t("vmax","arrays");
x.t("vmax","hosts");
x.t("example","sure");
x.t("enabling","srdf");
x.t("looks","dif");
x.t("mainframe","traffic");
x.t("mainframe","environments");
x.t("emc","symmetrix");
x.t("reduction","lan-to-wan");
x.t("notes","column");
x.t("throughput","environments");
x.t("compression","headers");
x.t("moves","new");
x.t("moves","selected");
x.t("srdf","connection");
x.t("srdf","default");
x.t("srdf","traffic");
x.t("srdf","tcp");
x.t("srdf","settings");
x.t("srdf","rule");
x.t("srdf","optimization");
x.t("srdf","ports");
x.t("srdf","display");
x.t("srdf","red");
x.t("srdf","headers");
x.t("srdf","environments");
x.t("srdf","reports");
x.t("srdf","header");
x.t("srdf","rios");
x.t("srdf","rules");
x.t("srdf","configuration");
x.t("srdf","connections");
x.t("srdf","page");
x.t("srdf","client-side");
x.t("srdf","module");
x.t("srdf","data");
x.t("srdf","port");
x.t("srdf","protocol");
x.t("srdf","storage");
x.t("implement","srdf");
x.t("workload","compression");
x.t("workload","dif");
x.t("workload","written");
x.t("within","srdf");
x.t("within","data");
x.t("lists","connection");
x.t("every","520");
x.t("every","512");
x.t("console","redisplays");
x.t("sending","initial");
x.t("table","applies");
x.t("table","control");
x.t("description","add");
x.t("isolates","optimizes");
x.t("currently","include");
x.t("appliance","performs");
x.t("appliance","please");
x.t("appliance","closest");
x.t("appliance","rios");
x.t("always","contain");
x.t("always","appears");
x.t("source","destination");
x.t("source","address");
x.t("source","specify");
x.t("required","enable");
x.t("related","topics");
x.t("replication","deployments");
x.t("replication","product");
x.t("replication","enable");
x.t("replication","gige");
x.t("replication","note");
x.t("performs","sdr");
x.t("performs","data");
x.t("ability","sdr");
x.t("directs","traffic");
x.t("difs","embedded");
x.t("apply","save");
x.t("steelhead","appliance");
x.t("steelhead","network");
x.t("steelhead","appliances");
x.t("permanently","related");
x.t("permanently","enabled");
x.t("permanently","restart");
x.t("enabled","disabled");
x.t("current","connections");
x.t("remote","data");
x.t("later","srdf");
x.t("later","report");
x.t("technologies","originate");
x.t("separates","srdf");
x.t("field","always");
x.t("field","required");
x.t("last","list");
x.t("uses","0.0.0.0");
x.t("redisplays","rules");
x.t("support","environments");
x.t("deployment","guide");
x.t("state","information");
x.t("interrupt","network");
x.t("interrupt","data");
x.t("icon","appears");
x.t("displays","controls");
x.t("originated","symmetrix");
x.t("vary","environment");
x.t("initiates","syn");
x.t("payload","details");
x.t("please","check");
x.t("change","default");
x.t("change","dif");
x.t("open","system");
x.t("connection","srdf");
x.t("connection","sending");
x.t("connection","source");
x.t("connection","normally");
x.t("connection","tcp");
x.t("connection","destination");
x.t("connection","verify");
x.t("connection","client-side");
x.t("however","change");
x.t("(as/400)","host");
x.t("product","performs");
x.t("channel","using");
x.t("require","configuration");
x.t("closest","symmetrix");
x.t("default","srdf");
x.t("default","rule");
x.t("default","rios");
x.t("default","value");
x.t("default","setting");
x.t("inject","dif");
x.t("details","srdf");
x.t("details","viewing");
x.t("details","starting");
x.t("details","data");
x.t("details","storage");
x.t("new","rule");
x.t("new","position");
x.t("block","size");
x.t("block","storage");
x.t("size","open");
x.t("size","standard");
x.t("size","specify");
x.t("need","additional");
x.t("list","edit");
x.t("list","cannot");
x.t("list","management");
x.t("complete","skip");
x.t("complete","configuration");
x.t("optimize","difs");
x.t("optimize","traffic");
x.t("add","srdf");
x.t("add","new");
x.t("add","adds");
x.t("add","module");
x.t("replicate","mainframe");
x.t("guide","increase");
x.t("guide","configure");
x.t("increase","data");
x.t("network","stream");
x.t("network","deduplication");
x.t("network","note");
x.t("presented","steelhead");
x.t("isolation","environments");
x.t("check","box");
x.t("check","lan-side");
x.t("normally","details");
x.t("remove","default");
x.t("remove","selected");
x.t("unless","change");
x.t("applies","modifications");
x.t("configuring","srdf");
x.t("configuring","fcip");
x.t("configuring","optimization");
x.t("features","configuring");
x.t("traffic","vmax");
x.t("traffic","srdf");
x.t("traffic","currently");
x.t("traffic","originated");
x.t("traffic","standard");
x.t("traffic","selected");
x.t("traffic","environments");
x.t("traffic","rios");
x.t("traffic","originating");
x.t("traffic","gige");
x.t("traffic","optionally");
x.t("traffic","symmetrix");
x.t("large","contiguous");
x.t("tcp","connection");
x.t("tcp","instead");
x.t("tcp","consumer");
x.t("sure","peer");
x.t("requires","configuration");
x.t("commas","specify");
x.t("desired","rule");
x.t("settings","permanently");
x.t("settings","select");
x.t("settings","running");
x.t("settings","configure");
x.t("vmax-to-vmax","traffic");
x.t("range","2048");
x.t("range","note");
x.t("stored","memory");
x.t("box","next");
x.t("name","click");
x.t("reassembles","delivers");
x.t("fcip","optimization");
x.t("fcip","storage");
x.t("changed","port");
x.t("addresses","cannot");
x.t("2048","bytes");
x.t("edit","srdf");
x.t("edit","rule");
x.t("skip","step");
x.t("dif","isolates");
x.t("dif","add");
x.t("dif","headers");
x.t("dif","header");
x.t("dif","rios");
x.t("dif","data");
x.t("dif","setting");
x.t("bytes","default");
x.t("bytes","add");
x.t("bytes","dif");
x.t("bytes","storage");
x.t("520","bytes");
x.t("provides","support");
x.t("peer","steelhead");
x.t("further","interrupt");
x.t("rule","moves");
x.t("rule","always");
x.t("rule","source");
x.t("rule","uses");
x.t("rule","displays");
x.t("rule","however");
x.t("rule","default");
x.t("rule","details");
x.t("rule","list");
x.t("rule","add");
x.t("rule","number");
x.t("rule","isolating");
x.t("rule","optimizes");
x.t("rule","click");
x.t("rule","choose");
x.t("rule","position");
x.t("ibm","iseries");
x.t("originates","traffic");
x.t("uninterrupted","storage");
x.t("standard","block");
x.t("standard","port");
x.t("restart","optimization");
x.t("originally","presented");
x.t("arrays","need");
x.t("arrays","isolate");
x.t("completing","srdf");
x.t("optimizing","connection");
x.t("destination","traffic");
x.t("destination","address");
x.t("destination","specify");
x.t("address","rule");
x.t("address","destination");
x.t("address","fields");
x.t("address","cannot");
x.t("address","symmetrix");
x.t("optimization","looks");
x.t("optimization","srdf");
x.t("optimization","features");
x.t("optimization","configuring");
x.t("optimization","settings");
x.t("optimization","changed");
x.t("optimization","dif");
x.t("optimization","provides");
x.t("optimization","viewing");
x.t("optimization","chapter");
x.t("optimization","enable");
x.t("optimization","disabled");
x.t("optimization","module");
x.t("optimization","choose");
x.t("optimization","service");
x.t("array","initiates");
x.t("array","opens");
x.t("array","compatibility");
x.t("fields","embedded");
x.t("fields","specifying");
x.t("integrity","fields");
x.t("fibre","channel");
x.t("ports","field");
x.t("ports","require");
x.t("ports","details");
x.t("ports","requires");
x.t("ports","ports");
x.t("ports","riverbed");
x.t("contain","least");
x.t("contain","changing");
x.t("stream","every");
x.t("stream","addition");
x.t("stream","reduce");
x.t("stream","isolate");
x.t("addition","enabling");
x.t("defining","match");
x.t("receiving","replication");
x.t("attempting","optimize");
x.t("selected","moves");
x.t("selected","rule");
x.t("selected","select");
x.t("selected","move");
x.t("selected","rules");
x.t("display","srdf");
x.t("error","srdf");
x.t("error","icon");
x.t("error","appear");
x.t("error","occur");
x.t("red","protocol");
x.t("next","srdf");
x.t("next","desired");
x.t("next","name");
x.t("arrow","next");
x.t("environments","srdf");
x.t("environments","inject");
x.t("environments","replicate");
x.t("environments","enable");
x.t("environments","windows");
x.t("environments","configuration");
x.t("environments","re-originated");
x.t("environments","using");
x.t("environments","gige-based");
x.t("headers","mainframe");
x.t("headers","within");
x.t("headers","field");
x.t("headers","interrupt");
x.t("headers","add");
x.t("headers","further");
x.t("headers","contain");
x.t("headers","rios");
x.t("headers","application");
x.t("select","check");
x.t("select","rule");
x.t("select","enable");
x.t("appears","notes");
x.t("appears","last");
x.t("reason","error");
x.t("gateways","implement");
x.t("written","storage");
x.t("sdr","network");
x.t("sdr","match");
x.t("viewing","srdf");
x.t("viewing","current");
x.t("magnifying","glass");
x.t("side","steelhead");
x.t("control","description");
x.t("number","rule");
x.t("0.0.0.0","source");
x.t("chapter","configuring");
x.t("restarting","optimization");
x.t("cannot","remove");
x.t("cannot","destination");
x.t("cannot","specify");
x.t("move","selected");
x.t("(srdf/a)","san");
x.t("instead","srdf");
x.t("instead","fibre");
x.t("reduce","ability");
x.t("step","environments");
x.t("starting","stopping");
x.t("report","lists");
x.t("report","report");
x.t("begins","valid");
x.t("unix","linux");
x.t("match","source");
x.t("match","large");
x.t("opens","srdf");
x.t("verify","configuration");
x.t("handling","replication");
x.t("isolating","dif");
x.t("isolating","header");
x.t("initial","syn");
x.t("syn","configure");
x.t("syn","packet");
x.t("enable","srdf");
x.t("enable","dif");
x.t("enable","modify");
x.t("optimizes","reassembles");
x.t("optimizes","data");
x.t("optimizes","remaining");
x.t("consumer","originally");
x.t("disabled","srdf");
x.t("disabled","details");
x.t("1748","srdf");
x.t("adds","rule");
x.t("rios","srdf");
x.t("rios","directs");
x.t("rios","separates");
x.t("rios","fcip");
x.t("rios","optimizing");
x.t("rios","optimizes");
x.t("rios","v6.1");
x.t("header","every");
x.t("header","isolation");
x.t("header","begins");
x.t("header","data");
x.t("environment","unsure");
x.t("server-side","steelhead");
x.t("least","port");
x.t("lan-side","symmetrix");
x.t("appear","next");
x.t("memory","remove");
x.t("greater","data");
x.t("embedded","within");
x.t("click","apply");
x.t("click","remove");
x.t("click","arrow");
x.t("click","magnifying");
x.t("click","save");
x.t("changing","protocol");
x.t("rules","table");
x.t("rules","complete");
x.t("rules","vmax-to-vmax");
x.t("rules","defining");
x.t("rules","click");
x.t("windows","unix");
x.t("technology","originates");
x.t("configuration","example");
x.t("configuration","steelhead");
x.t("configuration","complete");
x.t("configuration","stored");
x.t("configuration","rios");
x.t("configuration","click");
x.t("configuration","described");
x.t("configuration","isolate");
x.t("appliances","default");
x.t("appliances","restarting");
x.t("appliances","running");
x.t("iseries","(as/400)");
x.t("include","dif");
x.t("deduplication","larger");
x.t("additional","configuration");
x.t("running","rios");
x.t("running","configuration");
x.t("hosts","receiving");
x.t("hosts","handling");
x.t("value","512");
x.t("san","replication");
x.t("originate","traffic");
x.t("compatibility","protocol");
x.t("connections","srdf");
x.t("connections","current");
x.t("connections","completing");
x.t("connections","report");
x.t("view","srdf");
x.t("view","reason");
x.t("originating","lan");
x.t("facility/asynchronous","(srdf/a)");
x.t("contiguous","data");
x.t("nonstandard","individual");
x.t("valid","range");
x.t("linux","inject");
x.t("page","emc");
x.t("page","srdf");
x.t("page","select");
x.t("page","rules");
x.t("sequence","numbers");
x.t("larger","uninterrupted");
x.t("client-side","steelhead");
x.t("client-side","server-side");
x.t("specifying","addresses");
x.t("module","steelhead");
x.t("module","rule");
x.t("module","optimization");
x.t("module","environments");
x.t("module","configure");
x.t("module","enhanced");
x.t("configure","srdf");
x.t("configure","optimization");
x.t("data","reduction");
x.t("data","throughput");
x.t("data","workload");
x.t("data","replication");
x.t("data","steelhead");
x.t("data","payload");
x.t("data","block");
x.t("data","unless");
x.t("data","tcp");
x.t("data","bytes");
x.t("data","ibm");
x.t("data","integrity");
x.t("data","stream");
x.t("data","facility/asynchronous");
x.t("data","patterns");
x.t("information","sequence");
x.t("re-originated","srdf");
x.t("host","environments");
x.t("save","settings");
x.t("save","save");
x.t("removing","srdf");
x.t("gige","ports");
x.t("gige","instead");
x.t("application","data");
x.t("stopping","optimization");
x.t("512","bytes");
x.t("512","standard");
x.t("choose","configure");
x.t("port","range");
x.t("port","restart");
x.t("port","1748");
x.t("port","click");
x.t("port","numbers");
x.t("described","following");
x.t("modifications","running");
x.t("protocol","state");
x.t("protocol","error");
x.t("protocol","rios");
x.t("lan-to-wan","ratio");
x.t("note","srdf");
x.t("note","source");
x.t("note","traffic");
x.t("enhanced","srdf");
x.t("column","click");
x.t("topics","configuring");
x.t("riverbed","deployment");
x.t("optionally","specify");
x.t("numbers","headers");
x.t("numbers","separated");
x.t("packet","vary");
x.t("controls","adding");
x.t("storage","srdf");
x.t("storage","technologies");
x.t("storage","optimization");
x.t("storage","technology");
x.t("storage","module");
x.t("storage","data");
x.t("either","equal");
x.t("individual","srdf");
x.t("separated","commas");
x.t("service","details");
x.t("service","edit");
x.t("service","viewing");
x.t("service","view");
x.t("service","adding");
x.t("following","table");
x.t("system","environments");
x.t("management","console");
x.t("using","gateways");
x.t("using","storage");
x.t("unsure","array");
x.t("remaining","traffic");
x.t("setting","open");
x.t("setting","default");
x.t("v6.1","later");
x.t("adding","new");
x.t("adding","removing");
x.t("modify","srdf");
x.t("occur","attempting");
x.t("gige-based","re-originated");
x.t("patterns","isolating");
x.t("isolate","optimize");
x.t("isolate","dif");
x.t("position","rule");
x.t("position","click");
x.t("symmetrix","vmax");
x.t("symmetrix","remote");
x.t("symmetrix","array");
x.t("symmetrix","ports");
x.t("symmetrix","gige");
x.t("delivers","data");
x.t("glass","view");
x.t("ratio","either");
x.t("specify","connection");
x.t("specify","size");
x.t("specify","0.0.0.0");
x.t("specify","nonstandard");
x.t("specify","port");
x.t("lan","side");
}
