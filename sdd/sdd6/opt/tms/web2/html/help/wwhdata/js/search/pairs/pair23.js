function FileData_Pairs(x)
{
x.t("unlike","tcp");
x.t("included","rios");
x.t("example","link");
x.t("example","standard");
x.t("example","satellite");
x.t("example","conditions");
x.t("supports","interoperate");
x.t("supports","virtual");
x.t("supports","vlan");
x.t("supports","auto-discovery");
x.t("supports","kickoff");
x.t("deployments","wccp");
x.t("deployments","riverbed");
x.t("probe","subsequent");
x.t("enabling","error-tolerant");
x.t("enabling","high-speed");
x.t("particularly","channels");
x.t("tag","specify");
x.t("interfaces","scps");
x.t("81920","lan");
x.t("method","connection");
x.t("method","selected");
x.t("estimation","installing");
x.t("estimation","tcp");
x.t("estimation","standard");
x.t("possible","standard");
x.t("xxx.xxx.xxx.xxx/xx","destination");
x.t("xxx.xxx.xxx.xxx/xx","vlan");
x.t("256","enable");
x.t("improved","user");
x.t("allocation","automatically");
x.t("role","details");
x.t("managing","user");
x.t("proxy","steelhead");
x.t("proxy","connection");
x.t("throughput","high-bandwidth");
x.t("throughput","using");
x.t("moves","new");
x.t("moves","selected");
x.t("moves","next");
x.t("pattern","traffic");
x.t("meet","various");
x.t("needs","requirements");
x.t("needs","satellite");
x.t("applied","further");
x.t("applied","system");
x.t("console","redisplays");
x.t("describes","basic");
x.t("describes","configure");
x.t("installed","regardless");
x.t("contact","support");
x.t("failover","co-exists");
x.t("failover","in-path");
x.t("failover","adding");
x.t("table","describes");
x.t("table","default");
x.t("table","add");
x.t("table","applies");
x.t("table","configuring");
x.t("table","enables");
x.t("table","first");
x.t("table","feature");
x.t("table","control");
x.t("table","disabled");
x.t("table","ignores");
x.t("table","pass");
x.t("table","sei");
x.t("table","entries");
x.t("table","differs");
x.t("description","add");
x.t("description","auto-detect");
x.t("description","lan");
x.t("oob","connection");
x.t("high-delay","networks");
x.t("poor","signal");
x.t("various","needs");
x.t("various","device");
x.t("various","transport");
x.t("v6.5.x","later");
x.t("appliance","oob");
x.t("appliance","performs");
x.t("appliance","unoptimized");
x.t("appliance","desired");
x.t("appliance","inner");
x.t("appliance","important");
x.t("appliance","enable");
x.t("appliance","running");
x.t("appliance","reflect");
x.t("appliance","typically");
x.t("appliance","setting");
x.t("paired","third-party");
x.t("scaling","appropriate");
x.t("mechanism","steelhead");
x.t("layer","caution");
x.t("source","otherwise");
x.t("source","subnet");
x.t("4094","specify");
x.t("productivity","skipware");
x.t("skips","protocol");
x.t("performs","sender-side");
x.t("optimal","tcp");
x.t("optimal","transmission");
x.t("pipe","large");
x.t("pipe","algorithm");
x.t("apply","settings");
x.t("apply","vlan");
x.t("apply","vlans");
x.t("apply","save");
x.t("action","rule");
x.t("improve","performance");
x.t("user","experiences");
x.t("user","permissions");
x.t("user","intervention");
x.t("experiences","increased");
x.t("enabled","automatically");
x.t("enabled","two");
x.t("steelhead","supports");
x.t("steelhead","appliance");
x.t("steelhead","creates");
x.t("steelhead","uses");
x.t("steelhead","initiates");
x.t("steelhead","evaluates");
x.t("steelhead","reside");
x.t("steelhead","intercepts");
x.t("steelhead","detects");
x.t("steelhead","peer");
x.t("steelhead","receiving");
x.t("steelhead","replaces");
x.t("steelhead","appliances");
x.t("steelhead","running");
x.t("steelhead","terminates");
x.t("steelhead","probes");
x.t("steelhead","locate");
x.t("steelhead","tcp-pep");
x.t("steelhead","server");
x.t("converting","scps");
x.t("creates","asymmetric");
x.t("creates","entry");
x.t("creates","bad");
x.t("trade-offs","enabling");
x.t("counting","loss");
x.t("maximizes","performance");
x.t("permanently","click");
x.t("permanently","tip");
x.t("permanently","high-speed");
x.t("current","connections");
x.t("0.1","1937500");
x.t("0.1","sec");
x.t("later","paired");
x.t("later","includes");
x.t("later","license");
x.t("later","install");
x.t("later","steelheads");
x.t("uses","pipe");
x.t("uses","rules");
x.t("uses","sei");
x.t("remote","site");
x.t("latencies","600");
x.t("dimmed","unavailable");
x.t("until","install");
x.t("until","reenable");
x.t("tolerate","loss");
x.t("redisplays","scps");
x.t("support","configuring");
x.t("support","sales");
x.t("support","optimizing");
x.t("support","high-speed");
x.t("deployment","guide");
x.t("high-latency","links");
x.t("center","steelhead");
x.t("necessary","sei");
x.t("mode","peer");
x.t("mode","specifies");
x.t("interface","reference");
x.t("calculates","optimal");
x.t("errors","without");
x.t("modified","congestion");
x.t("modified","slow-start");
x.t("displays","congestion");
x.t("displays","controls");
x.t("providing","improved");
x.t("basic","steps");
x.t("basic","rios");
x.t("change","skipware");
x.t("type","following");
x.t("initiates","scps");
x.t("evaluates","single-ended");
x.t("evaluates","sei");
x.t("newreno","algorithm");
x.t("bypasses","connection");
x.t("wildcard","traffic");
x.t("response","without");
x.t("enhancing","proxy");
x.t("initiate","scps");
x.t("timestamps","window");
x.t("packets","trigger");
x.t("packets","bit");
x.t("packets","note");
x.t("evaluate","rules");
x.t("lfns","wan");
x.t("regardless","transport");
x.t("connection","type");
x.t("connection","count");
x.t("connection","wan");
x.t("connection","scps");
x.t("connection","rule");
x.t("connection","congestion");
x.t("connection","select");
x.t("connection","types");
x.t("connection","works");
x.t("connection","benefits");
x.t("connection","rios");
x.t("connection","server-side");
x.t("connection","rules");
x.t("connection","appliances");
x.t("connection","forwarding");
x.t("connection","view");
x.t("connection","established");
x.t("connection","client-side");
x.t("connection","information");
x.t("connection","called");
x.t("connection","riverbed");
x.t("connection","communicates");
x.t("connection","using");
x.t("connection","single-ended");
x.t("connection","sei");
x.t("connection","detail");
x.t("sections","describe");
x.t("pbr","cannot");
x.t("rate","detection");
x.t("trigger","congestion");
x.t("per-packet","overhead");
x.t("unoptimized","add");
x.t("round-trip","delay");
x.t("wans","increase");
x.t("wans","high-speed");
x.t("wans","riverbed");
x.t("product","family");
x.t("product","(bdp)");
x.t("increases","decreases");
x.t("automatically","license");
x.t("automatically","detects");
x.t("automatically","adjust");
x.t("jointly","nasa");
x.t("speed","data");
x.t("count","toward");
x.t("count","limit");
x.t("default","256");
x.t("default","rule");
x.t("default","receive");
x.t("default","rules");
x.t("default","value");
x.t("default","send");
x.t("default","setting");
x.t("default","sei");
x.t("networks","lfns");
x.t("networks","enable");
x.t("networks","riverbed");
x.t("networks","typically");
x.t("networks","terminate");
x.t("assumes","environment");
x.t("channel","congestion");
x.t("0.0.0.0/0","wildcard");
x.t("needed","configure");
x.t("details","example");
x.t("details","managing");
x.t("details","trade-offs");
x.t("details","asymmetric");
x.t("details","scps");
x.t("details","data");
x.t("details","using");
x.t("interoperate","steelhead");
x.t("single","steelhead");
x.t("link","high-latency");
x.t("link","155");
x.t("branch","office");
x.t("asymmetric","routing");
x.t("advertises","automatic");
x.t("advanced","bandwidth");
x.t("start","congestion");
x.t("start","end");
x.t("port-label","bypasses");
x.t("new","rule");
x.t("new","position");
x.t("mbps","100");
x.t("mbps","155000000");
x.t("includes","non-skipware");
x.t("includes","compatibility");
x.t("includes","sender's");
x.t("includes","following");
x.t("designed","allow");
x.t("designed","sense");
x.t("designed","operate");
x.t("license","installed");
x.t("license","includes");
x.t("license","restart");
x.t("license","enable");
x.t("license","click");
x.t("license","skipware");
x.t("configurations","steelhead");
x.t("configurations","(non-scps)");
x.t("adversely","affect");
x.t("size","bytes");
x.t("size","configure");
x.t("size","used");
x.t("size","buffer");
x.t("size","specify");
x.t("standards","(scps)");
x.t("discovery","mechanisms");
x.t("discovery","process");
x.t("reside","branch");
x.t("need","understand");
x.t("list","steelhead");
x.t("list","management");
x.t("numerical","order");
x.t("000","0.1");
x.t("000","000");
x.t("000","bytes");
x.t("installing","skipware");
x.t("intercepts","connection");
x.t("recommends","enable");
x.t("recommends","setting");
x.t("recommends","sei");
x.t("add","new");
x.t("add","move");
x.t("add","adds");
x.t("add","in-path");
x.t("add","rules");
x.t("add","single-ended");
x.t("complete","long");
x.t("complete","configuration");
x.t("pipes","high-bandwidth");
x.t("benefit","network");
x.t("actions","enable");
x.t("optimize","single-ended");
x.t("wan","interfaces");
x.t("wan","pipe");
x.t("wan","evaluates");
x.t("wan","default");
x.t("wan","add");
x.t("wan","optimization");
x.t("wan","control");
x.t("wan","buffers");
x.t("wan","configuration");
x.t("wan","buffer");
x.t("guide","scps");
x.t("guide","properly");
x.t("guide","rios");
x.t("guide","option");
x.t("guide","configure");
x.t("guide","choose");
x.t("guide","hs-tcp");
x.t("assistance","converting");
x.t("network","asymmetry");
x.t("network","environment");
x.t("entry","asymmetric");
x.t("results","tcp");
x.t("high-bandwidth","high-delay");
x.t("high-bandwidth","links");
x.t("applies","tcp");
x.t("applies","untagged");
x.t("applies","vlans");
x.t("applies","modifications");
x.t("due","poor");
x.t("due","corrupted");
x.t("retransmitted","packets");
x.t("remove","selected");
x.t("remove","rules");
x.t("unless","specify");
x.t("check","box");
x.t("32768","wan");
x.t("increase","wan");
x.t("increase","lan");
x.t("bits","per");
x.t("configuring","asymmetric");
x.t("configuring","tcp");
x.t("configuring","optimization");
x.t("configuring","general");
x.t("configuring","buffer");
x.t("tcp","proxy");
x.t("tcp","support");
x.t("tcp","change");
x.t("tcp","details");
x.t("tcp","configuring");
x.t("tcp","traffic");
x.t("tcp","tcp");
x.t("tcp","settings");
x.t("tcp","scps");
x.t("tcp","optimization");
x.t("tcp","congestion");
x.t("tcp","activated");
x.t("tcp","feature");
x.t("tcp","chapter");
x.t("tcp","section");
x.t("tcp","task");
x.t("tcp","satellite");
x.t("tcp","connections");
x.t("tcp","highspeed");
x.t("tcp","high-speed");
x.t("tcp","otherwise");
x.t("tcp","work");
x.t("tcp","cases");
x.t("tcp","(rfc-compliant)");
x.t("tcp","used");
x.t("tcp","skipware");
x.t("tcp","bandwidth");
x.t("tcp","flows");
x.t("features","configuring");
x.t("features","figure");
x.t("features","configure");
x.t("v7.0","later");
x.t("v7.0","single-ended");
x.t("collaborative","multiyear");
x.t("referred","skips");
x.t("co-exists","high-speed");
x.t("traffic","source");
x.t("traffic","adversely");
x.t("traffic","wan");
x.t("traffic","destination");
x.t("traffic","following");
x.t("traffic","maintains");
x.t("large","latency");
x.t("channels","providing");
x.t("channels","coexisting");
x.t("exclusive","technology");
x.t("requirements","collaborative");
x.t("high","throughput");
x.t("high","latencies");
x.t("high","ber");
x.t("high","latency");
x.t("high","high-speed");
x.t("speeds","setup");
x.t("detects","optimal");
x.t("detects","asymmetry");
x.t("desired","rule");
x.t("desired","setting");
x.t("desired","effect");
x.t("gates","packet");
x.t("receipt","ack");
x.t("byte","example");
x.t("byte","counting");
x.t("requires","significantly");
x.t("summarizes","optimized");
x.t("settings","permanently");
x.t("settings","includes");
x.t("settings","complete");
x.t("settings","increase");
x.t("settings","display");
x.t("settings","space");
x.t("settings","verify");
x.t("settings","transport");
x.t("settings","enable");
x.t("settings","environment");
x.t("settings","running");
x.t("settings","depending");
x.t("settings","satellite");
x.t("settings","page");
x.t("settings","configure");
x.t("settings","choose");
x.t("settings","role-based");
x.t("settings","buffer");
x.t("common","sources");
x.t("scps","mode");
x.t("scps","initiate");
x.t("scps","connection");
x.t("scps","designed");
x.t("scps","discovery");
x.t("scps","scps");
x.t("scps","optimization");
x.t("scps","licenses");
x.t("scps","rules");
x.t("scps","connections");
x.t("scps","rsp");
x.t("scps","protocol");
x.t("scps","terminate");
x.t("scps","skipware");
x.t("scps","installation");
x.t("name","click");
x.t("name","skipware");
x.t("toward","connection");
x.t("slow","start");
x.t("stored","memory");
x.t("box","next");
x.t("performance","enhancing");
x.t("performance","details");
x.t("performance","characteristics");
x.t("performance","loss");
x.t("performance","high-loss");
x.t("communication","challenging");
x.t("standards-transport","protocol");
x.t("wireless","communities");
x.t("previously","highspeed");
x.t("enables","rule");
x.t("enables","transport");
x.t("enables","high-speed");
x.t("enables","skipware");
x.t("manual","bandwidth");
x.t("avoidance","timestamps");
x.t("avoidance","approach");
x.t("avoidance","algorithm");
x.t("virtual","in-path");
x.t("limit","steelhead");
x.t("ipv4","address");
x.t("262140","wan");
x.t("262140","click");
x.t("bytes","number");
x.t("bytes","bdp");
x.t("bytes","bandwidth");
x.t("bytes","buffer");
x.t("provides","acceleration");
x.t("provides","satellite");
x.t("overcome","common");
x.t("networking","satellite");
x.t("window","scaling");
x.t("window","response");
x.t("window","slow");
x.t("window","sizes");
x.t("sales","team");
x.t("rule","example");
x.t("rule","moves");
x.t("rule","applied");
x.t("rule","necessary");
x.t("rule","displays");
x.t("rule","list");
x.t("rule","add");
x.t("rule","optimize");
x.t("rule","applies");
x.t("rule","speeds");
x.t("rule","number");
x.t("rule","match");
x.t("rule","consulted");
x.t("rule","client");
x.t("rule","matches");
x.t("rule","takes");
x.t("rule","optional");
x.t("rule","choose");
x.t("rule","single-ended");
x.t("rule","position");
x.t("rule","conditions");
x.t("peer","steelhead");
x.t("peer","connections");
x.t("inner","connections");
x.t("further","rules");
x.t("standard","tcp");
x.t("restart","restart");
x.t("restart","optimization");
x.t("determine","whether");
x.t("optimized","connections");
x.t("optimized","established");
x.t("optimizing","tcp");
x.t("optimizing","scps");
x.t("allows","effective");
x.t("allows","per-connection");
x.t("originally","developed");
x.t("non-skipware","options");
x.t("(non-scps)","client-side");
x.t("destination","port");
x.t("destination","otherwise");
x.t("destination","subnet");
x.t("address","mask");
x.t("preexisting","vlan");
x.t("optimization","supports");
x.t("optimization","particularly");
x.t("optimization","method");
x.t("optimization","possible");
x.t("optimization","calculates");
x.t("optimization","automatically");
x.t("optimization","assumes");
x.t("optimization","complete");
x.t("optimization","applies");
x.t("optimization","features");
x.t("optimization","settings");
x.t("optimization","scps");
x.t("optimization","enables");
x.t("optimization","overcome");
x.t("optimization","peer");
x.t("optimization","allows");
x.t("optimization","second");
x.t("optimization","error");
x.t("optimization","sdr");
x.t("optimization","carefully");
x.t("optimization","transport");
x.t("optimization","properly");
x.t("optimization","option");
x.t("optimization","mechanisms");
x.t("optimization","high-speed");
x.t("optimization","configure");
x.t("optimization","service");
x.t("optimization","using");
x.t("optimization","single-ended");
x.t("optimization","sei");
x.t("adjust","transmission");
x.t("allow","communication");
x.t("auto-detect","tcp");
x.t("untagged","connections");
x.t("untagged","specify");
x.t("permissions","important");
x.t("device","scenarios");
x.t("device","running");
x.t("device","using");
x.t("understand","characteristics");
x.t("error-tolerant","tcp");
x.t("retransmissions","due");
x.t("second","default");
x.t("receiving","scps");
x.t("mask","pattern");
x.t("mask","traffic");
x.t("v802.1q","configure");
x.t("effective","satellite");
x.t("selected","example");
x.t("selected","move");
x.t("selected","rules");
x.t("pass-through","traffic");
x.t("pass-through","scps");
x.t("pass-through","rule");
x.t("gathering","performance");
x.t("congestion","maximizes");
x.t("congestion","avoidance");
x.t("congestion","window");
x.t("congestion","control");
x.t("congestion","competing");
x.t("ber","retransmissions");
x.t("quality","instead");
x.t("vlan","tag");
x.t("vlan","default");
x.t("vlan","v802.1q");
x.t("vlan","pass-through");
x.t("vlan","identification");
x.t("vlan","values");
x.t("vlan","tagging");
x.t("activated","connections");
x.t("family","designed");
x.t("licenses","contact");
x.t("licenses","details");
x.t("licenses","native");
x.t("licenses","valid");
x.t("scps-compatible","double-ended");
x.t("independent","steelheads");
x.t("display","scps");
x.t("display","transport");
x.t("sizes","satellite");
x.t("error","rate");
x.t("interactive","port-label");
x.t("calculate","bdp");
x.t("usspacecom","meet");
x.t("install","skipware");
x.t("asymmetry","creates");
x.t("asymmetry","occurs");
x.t("asymmetry","bad");
x.t("occurs","sei");
x.t("hard","code");
x.t("automatic","detection");
x.t("next","desired");
x.t("next","name");
x.t("next","rule");
x.t("next","packet");
x.t("arrow","next");
x.t("delay","product");
x.t("delay","100");
x.t("delay","sec");
x.t("delay","bandwidth");
x.t("(bdp)","calculate");
x.t("space","networking");
x.t("space","communications");
x.t("environments","originally");
x.t("environments","without");
x.t("developed","jointly");
x.t("first","default");
x.t("first","commercial");
x.t("commercial","implementation");
x.t("options","bandwidth");
x.t("per-connection","tcp");
x.t("per-connection","congestion");
x.t("per-connection","setting");
x.t("long","fat");
x.t("command-line","interface");
x.t("feature","dimmed");
x.t("feature","provides");
x.t("appears","rules");
x.t("select","start");
x.t("select","check");
x.t("select","following");
x.t("875","000");
x.t("communications","protocol");
x.t("sdr","rios");
x.t("setup","eliminating");
x.t("control","method");
x.t("control","description");
x.t("control","uses");
x.t("control","tolerate");
x.t("control","previously");
x.t("control","report");
x.t("control","scps-capable");
x.t("control","single-ended");
x.t("control","forces");
x.t("1.2","variable");
x.t("number","4094");
x.t("number","greater");
x.t("number","drop-down");
x.t("viewing","current");
x.t("effort","partnership");
x.t("commonly","referred");
x.t("meets","needs");
x.t("(sei)","connection");
x.t("(sei)","figure");
x.t("clears","advanced");
x.t("approach","requires");
x.t("signal","quality");
x.t("chapter","configuring");
x.t("cannot","initiate");
x.t("define","sei");
x.t("whether","benefit");
x.t("whether","changes");
x.t("whether","enable");
x.t("different","types");
x.t("carefully","evaluated");
x.t("recovery","mechanism");
x.t("move","remove");
x.t("move","selected");
x.t("particular","vlan");
x.t("specifies","action");
x.t("receive","data");
x.t("receive","buffer");
x.t("office","steelhead");
x.t("characteristics","environment");
x.t("characteristics","information");
x.t("instead","congestion");
x.t("proto","port-label");
x.t("starting","rule");
x.t("vlans","untagged");
x.t("vlans","specific");
x.t("report","displays");
x.t("report","summarizes");
x.t("report","report");
x.t("section","describes");
x.t("section","optimizing");
x.t("transport","layer");
x.t("transport","settings");
x.t("transport","optimization");
x.t("transport","streamlining");
x.t("loss","due");
x.t("loss","detection");
x.t("loss","associated");
x.t("types","networks");
x.t("types","details");
x.t("types","configure");
x.t("wccp","pbr");
x.t("eliminating","auto-discovery");
x.t("properly","configure");
x.t("changes","desired");
x.t("changes","effect");
x.t("match","rule");
x.t("match","system");
x.t("consulted","source");
x.t("consulted","rule");
x.t("format","xxx.xxx.xxx.xxx/xx");
x.t("verify","whether");
x.t("transmission","window");
x.t("important","steelhead");
x.t("important","server-side");
x.t("works","rios");
x.t("auto-discovery","probe");
x.t("auto-discovery","failover");
x.t("auto-discovery","disabled");
x.t("600","1.2");
x.t("high-loss","environments");
x.t("scenarios","improve");
x.t("scenarios","riverbed");
x.t("replaces","third-party");
x.t("enable","enables");
x.t("enable","pass-through");
x.t("enable","in-path");
x.t("enable","satellite");
x.t("enable","high-speed");
x.t("enable","riverbed");
x.t("enable","hs-tcp");
x.t("enable","setting");
x.t("enable","single-ended");
x.t("enable","pass");
x.t("client","server");
x.t("code","hub");
x.t("reference","manual");
x.t("reference","enable");
x.t("end","rule");
x.t("reports","display");
x.t("steps","needed");
x.t("steps","following");
x.t("task","reference");
x.t("155","mbps");
x.t("155","000");
x.t("benefits","traditional");
x.t("interception","connection");
x.t("interception","scps");
x.t("interception","(sei)");
x.t("interception","connections");
x.t("disabled","enabled");
x.t("disabled","details");
x.t("optimizes","non-scps");
x.t("corrupted","packets");
x.t("adds","rule");
x.t("rios","supports");
x.t("rios","v6.5.x");
x.t("rios","advertises");
x.t("rios","v7.0");
x.t("rios","features");
x.t("rios","scps");
x.t("rios","optimization");
x.t("environment","details");
x.t("environment","need");
x.t("environment","high");
x.t("environment","several");
x.t("environment","riverbed");
x.t("in-path","deployments");
x.t("in-path","support");
x.t("in-path","rule");
x.t("in-path","pass-through");
x.t("in-path","rules");
x.t("server-side","steelhead");
x.t("server-side","network");
x.t("server-side","out-of-path");
x.t("option","clears");
x.t("option","affect");
x.t("option","single-ended");
x.t("losses","chunks");
x.t("coexisting","tcp");
x.t("affect","channel");
x.t("affect","optimization");
x.t("appear","rules");
x.t("appear","typical");
x.t("matches","traffic");
x.t("matches","conditions");
x.t("memory","remove");
x.t("known","long");
x.t("100","0.1");
x.t("100","packets");
x.t("100","round-trip");
x.t("buffers","configure");
x.t("buffers","bandwidth");
x.t("variable","bandwidth");
x.t("click","apply");
x.t("click","connection");
x.t("click","remove");
x.t("click","restart");
x.t("click","arrow");
x.t("click","save");
x.t("identification","number");
x.t("greater","default");
x.t("rules","moves");
x.t("rules","table");
x.t("rules","apply");
x.t("rules","steelhead");
x.t("rules","numerical");
x.t("rules","complete");
x.t("rules","determine");
x.t("rules","appears");
x.t("rules","select");
x.t("rules","control");
x.t("rules","changes");
x.t("rules","consulted");
x.t("rules","click");
x.t("rules","optionally");
x.t("peers","standard");
x.t("sources","performance");
x.t("technology","riverbed");
x.t("challenging","environments");
x.t("latency","high");
x.t("latency","limited");
x.t("mechanisms","included");
x.t("mechanisms","remote");
x.t("appliances","evaluate");
x.t("appliances","running");
x.t("appliances","client-side");
x.t("appliances","disable");
x.t("appliances","otherwise");
x.t("configuration","steelhead");
x.t("configuration","stored");
x.t("configuration","server-side");
x.t("configuration","click");
x.t("configuration","described");
x.t("running","scps");
x.t("running","rios");
x.t("running","configuration");
x.t("running","tcp-pep");
x.t("kickoff","supports");
x.t("reflect","various");
x.t("additional","per-packet");
x.t("rbt-","proto");
x.t("value","81920");
x.t("value","32768");
x.t("value","262140");
x.t("compatibility","settings");
x.t("suite","scps");
x.t("implementation","scps");
x.t("depending","connection");
x.t("figure","steelhead");
x.t("figure","rios");
x.t("figure","single-ended");
x.t("several","different");
x.t("scps-capable","connection");
x.t("drop-down","list");
x.t("specific","vlan");
x.t("send","data");
x.t("send","buffer");
x.t("acceleration","high");
x.t("satellite","deployments");
x.t("satellite","wans");
x.t("satellite","networks");
x.t("satellite","link");
x.t("satellite","wan");
x.t("satellite","channels");
x.t("satellite","wireless");
x.t("satellite","optimization");
x.t("satellite","environment");
x.t("nasa","dod");
x.t("brand","name");
x.t("native","rios");
x.t("process","used");
x.t("forwarding","configure");
x.t("connections","steelhead");
x.t("connections","count");
x.t("connections","scps");
x.t("connections","report");
x.t("connections","appear");
x.t("connections","rios");
x.t("connections","click");
x.t("connections","choose");
x.t("connections","bdp");
x.t("connections","riverbed");
x.t("connections","passthrough");
x.t("connections","skipware");
x.t("connections","pass");
x.t("connections","applying");
x.t("fat","networks");
x.t("fat","pipes");
x.t("view","details");
x.t("multiyear","effort");
x.t("partnership","created");
x.t("valid","native");
x.t("established","single");
x.t("established","optimized");
x.t("established","connections");
x.t("established","two");
x.t("established","single-ended");
x.t("third-party","device");
x.t("terminates","scps");
x.t("chunks","default");
x.t("takes","scps");
x.t("page","support");
x.t("page","optimizing");
x.t("page","transport");
x.t("page","single-ended");
x.t("page","buffer");
x.t("intervention","optimizing");
x.t("rsp","package");
x.t("transfer","satellite");
x.t("client-side","steelhead");
x.t("client-side","server-side");
x.t("site","steelhead");
x.t("highspeed","tcp");
x.t("highspeed","enable");
x.t("tip","apply");
x.t("larger","100");
x.t("1937500","bytes");
x.t("1937500","875");
x.t("high-speed","tcp");
x.t("configure","tcp");
x.t("configure","scps");
x.t("configure","optimization");
x.t("configure","vlan");
x.t("configure","transport");
x.t("configure","satellite");
x.t("configure","high-speed");
x.t("configure","buffer");
x.t("data","center");
x.t("data","wan");
x.t("data","transport");
x.t("data","transfer");
x.t("data","protection");
x.t("data","lan");
x.t("optional","without");
x.t("information","gathering");
x.t("information","congestion");
x.t("overhead","fec");
x.t("fec","algorithm");
x.t("competing","tcp");
x.t("typical","established");
x.t("correct","buffer");
x.t("decreases","bandwidth");
x.t("dod","usspacecom");
x.t("team","assistance");
x.t("traditional","rios");
x.t("probes","steelhead");
x.t("ignores","in-path");
x.t("hub","steelhead");
x.t("hub","server-side");
x.t("detection","tcp");
x.t("detection","feature");
x.t("detection","recovery");
x.t("ack","newreno");
x.t("appropriate","byte");
x.t("bit","errors");
x.t("caution","enabling");
x.t("save","settings");
x.t("save","save");
x.t("protection","deployments");
x.t("protection","scenarios");
x.t("out-of-path","steelhead");
x.t("locate","failover");
x.t("routing","table");
x.t("routing","features");
x.t("unavailable","until");
x.t("significantly","retransmitted");
x.t("disable","table");
x.t("values","unless");
x.t("permission","optimization");
x.t("tcp-pep","performance");
x.t("tcp-pep","device");
x.t("tcp-pep","data");
x.t("called","single-ended");
x.t("rst","creates");
x.t("rst","log");
x.t("choose","option");
x.t("choose","configure");
x.t("described","following");
x.t("non-scps","tcp");
x.t("streamlining","tcp");
x.t("streamlining","riverbed");
x.t("reducing","throughput");
x.t("port","interactive");
x.t("port","rbt-");
x.t("modifications","running");
x.t("bps","delay");
x.t("sense","increases");
x.t("requiring","user");
x.t("protocol","speed");
x.t("protocol","designed");
x.t("protocol","standards");
x.t("protocol","standards-transport");
x.t("protocol","meets");
x.t("protocol","suite");
x.t("protocol","scps-tp");
x.t("protocol","released");
x.t("two","steelhead");
x.t("two","default");
x.t("steelheads","results");
x.t("steelheads","scps-compatible");
x.t("otherwise","standard");
x.t("otherwise","hard");
x.t("otherwise","specify");
x.t("bdp","wan");
x.t("bdp","155");
x.t("bdp","larger");
x.t("bdp","1937500");
x.t("note","details");
x.t("riverbed","deployment");
x.t("riverbed","product");
x.t("riverbed","recommends");
x.t("riverbed","provides");
x.t("riverbed","command-line");
x.t("work","connection");
x.t("typically","detects");
x.t("typically","high");
x.t("cases","default");
x.t("mixed","environment");
x.t("algorithm","modified");
x.t("algorithm","includes");
x.t("algorithm","gates");
x.t("algorithm","transport");
x.t("algorithm","skipware");
x.t("sender's","congestion");
x.t("optionally","add");
x.t("disables","rule");
x.t("hs-tcp","basic");
x.t("hs-tcp","data");
x.t("hs-tcp","correct");
x.t("sec","bits");
x.t("sec","delay");
x.t("sec","bdp");
x.t("created","space");
x.t("operate","environment");
x.t("package","details");
x.t("package","licenses");
x.t("communicates","steelhead");
x.t("negotiated","standard");
x.t("(rfc-compliant)","optimizes");
x.t("packet","losses");
x.t("packet","sent");
x.t("packet","conditions");
x.t("controls","adding");
x.t("order","starting");
x.t("passthrough","disables");
x.t("following","table");
x.t("following","sections");
x.t("following","actions");
x.t("following","vlan");
x.t("following","section");
x.t("following","format");
x.t("following","figure");
x.t("communities","unlike");
x.t("service","role");
x.t("service","basic");
x.t("service","settings");
x.t("service","adding");
x.t("used","various");
x.t("used","receive");
x.t("used","send");
x.t("used","data");
x.t("links","known");
x.t("links","following");
x.t("terminate","connection");
x.t("terminate","hub");
x.t("system","moves");
x.t("system","consults");
x.t("subnet","specify");
x.t("tagging","configure");
x.t("tagging","lan");
x.t("management","console");
x.t("skipware","enabled");
x.t("skipware","license");
x.t("skipware","discovery");
x.t("skipware","exclusive");
x.t("skipware","settings");
x.t("skipware","scps");
x.t("skipware","optimization");
x.t("skipware","error-tolerant");
x.t("skipware","per-connection");
x.t("skipware","rios");
x.t("skipware","negotiated");
x.t("skipware","skipware");
x.t("(scps)","protocol");
x.t("scps-tp","commonly");
x.t("role-based","permission");
x.t("installation","guide");
x.t("using","mode");
x.t("using","modified");
x.t("using","configuring");
x.t("using","scps");
x.t("using","hs-tcp");
x.t("setting","allows");
x.t("setting","error-tolerant");
x.t("setting","rios");
x.t("setting","in-path");
x.t("setting","hub");
x.t("setting","mixed");
x.t("setting","skipware");
x.t("general","service");
x.t("single-ended","connection");
x.t("single-ended","scps");
x.t("single-ended","optimized");
x.t("single-ended","interception");
x.t("sender-side","tcp");
x.t("adding","new");
x.t("adding","in-path");
x.t("adding","single-ended");
x.t("subsequent","failover");
x.t("bad","rst");
x.t("evaluated","whether");
x.t("pass","steelhead");
x.t("pass","scps");
x.t("consults","next");
x.t("per","byte");
x.t("per","sec");
x.t("associated","space");
x.t("without","steelhead");
x.t("without","reducing");
x.t("without","requiring");
x.t("without","incurring");
x.t("limited","bandwidth");
x.t("double-ended","connection");
x.t("applying","data");
x.t("slow-start","algorithm");
x.t("maintains","preexisting");
x.t("bandwidth","estimation");
x.t("bandwidth","allocation");
x.t("bandwidth","bits");
x.t("bandwidth","congestion");
x.t("bandwidth","delay");
x.t("bandwidth","first");
x.t("bandwidth","155");
x.t("bandwidth","packet");
x.t("released","brand");
x.t("describe","connection");
x.t("sei","connection");
x.t("sei","configurations");
x.t("sei","define");
x.t("sei","configuration");
x.t("sei","connections");
x.t("incurring","additional");
x.t("effect","until");
x.t("effect","viewing");
x.t("position","rule");
x.t("position","select");
x.t("position","click");
x.t("increased","productivity");
x.t("log","entry");
x.t("entries","independent");
x.t("forces","peers");
x.t("sent","receipt");
x.t("reenable","table");
x.t("conditions","applied");
x.t("conditions","rule");
x.t("buffer","size");
x.t("buffer","settings");
x.t("server","pass-through");
x.t("server","auto-discovery");
x.t("differs","configurations");
x.t("flows","feature");
x.t("specify","0.0.0.0/0");
x.t("specify","ipv4");
x.t("specify","rule");
x.t("specify","particular");
x.t("specify","receive");
x.t("specify","send");
x.t("specify","following");
x.t("lan","default");
x.t("lan","wan");
x.t("lan","receive");
x.t("lan","buffers");
x.t("lan","send");
x.t("detail","reports");
x.t("155000000","bps");
}
