function FileData_Pairs(x)
{
x.t("equal","greater");
x.t("deployments","riverbed");
x.t("vmax","srdf");
x.t("vmax","arrays");
x.t("example","sure");
x.t("example","adding");
x.t("enabling","fcip");
x.t("looks","dif");
x.t("transmits","information");
x.t("reduction","lan-to-wan");
x.t("reduction","statistics");
x.t("notes","column");
x.t("combined","throughput");
x.t("properties","fcip");
x.t("throughput","reduction");
x.t("throughput","environments");
x.t("compression","headers");
x.t("moves","new");
x.t("moves","selected");
x.t("workload","compression");
x.t("workload","dif");
x.t("workload","written");
x.t("srdf","pair");
x.t("srdf","traffic");
x.t("srdf","optimization");
x.t("srdf","storage");
x.t("within","fcip");
x.t("within","headers");
x.t("lists","connection");
x.t("every","520");
x.t("every","512");
x.t("console","redisplays");
x.t("sending","initial");
x.t("table","applies");
x.t("table","control");
x.t("description","add");
x.t("isolates","optimizes");
x.t("appliance","performs");
x.t("appliance","closest");
x.t("always","contain");
x.t("always","appears");
x.t("source","destination");
x.t("source","address");
x.t("source","10.0.0.1");
x.t("source","specify");
x.t("required","enable");
x.t("carry","traffic");
x.t("related","topic");
x.t("ability","sdr");
x.t("performs","sdr");
x.t("replication","deployments");
x.t("directs","traffic");
x.t("difs","embedded");
x.t("apply","save");
x.t("regular","fcip");
x.t("steelhead","appliance");
x.t("steelhead","appliances");
x.t("permanently","example");
x.t("permanently","enabled");
x.t("permanently","restart");
x.t("enabled","disabled");
x.t("current","connections");
x.t("topic","configuring");
x.t("later","fcip");
x.t("later","report");
x.t("uses","0.0.0.0");
x.t("uses","tunnel");
x.t("uses","either");
x.t("7500","fcip");
x.t("separates","fcip");
x.t("remote","data");
x.t("technologies","originate");
x.t("field","always");
x.t("field","required");
x.t("field","(dif)");
x.t("last","list");
x.t("redisplays","rules");
x.t("pair","vmax");
x.t("pair","fcip");
x.t("support","environments");
x.t("state","information");
x.t("interrupt","network");
x.t("interrupt","data");
x.t("facility","(srdf)");
x.t("deployment","guide");
x.t("look","fcip");
x.t("look","dif");
x.t("icon","appears");
x.t("icon","report");
x.t("interface","reference");
x.t("interface","protocol");
x.t("displays","controls");
x.t("leave","default");
x.t("originated","srdf");
x.t("originated","symmetrix");
x.t("vary","environment");
x.t("initiates","syn");
x.t("payload","details");
x.t("change","default");
x.t("change","dif");
x.t("open","system");
x.t("connection","sending");
x.t("connection","source");
x.t("connection","tcp");
x.t("connection","fcip");
x.t("connection","destination");
x.t("connection","appears");
x.t("connection","verify");
x.t("connection","application");
x.t("however","change");
x.t("channel","tcp/ip");
x.t("channel","(fc)");
x.t("networks","fcip");
x.t("limitations","rios");
x.t("(mds)","brocade");
x.t("require","configuration");
x.t("closest","fcip");
x.t("default","fcip");
x.t("default","rule");
x.t("default","rios");
x.t("default","value");
x.t("default","setting");
x.t("inject","dif");
x.t("rf-","originated");
x.t("details","fcip");
x.t("details","viewing");
x.t("details","starting");
x.t("details","data");
x.t("details","riverbed");
x.t("details","storage");
x.t("new","rule");
x.t("new","position");
x.t("consists","mostly");
x.t("designed","overcome");
x.t("command","command-line");
x.t("block","size");
x.t("block","storage");
x.t("size","leave");
x.t("size","open");
x.t("size","standard");
x.t("size","specify");
x.t("need","additional");
x.t("list","edit");
x.t("list","optimized");
x.t("list","cannot");
x.t("list","management");
x.t("list","without");
x.t("entering","following");
x.t("cisco","multilayer");
x.t("complete","skip");
x.t("complete","configuration");
x.t("optimize","difs");
x.t("add","related");
x.t("add","new");
x.t("add","remove");
x.t("add","fcip");
x.t("add","adds");
x.t("add","following");
x.t("transparent","fibre");
x.t("increase","data");
x.t("network","stream");
x.t("network","deduplication");
x.t("guide","configure");
x.t("remove","default");
x.t("remove","fcip");
x.t("remove","selected");
x.t("remove","port");
x.t("unless","change");
x.t("applies","modifications");
x.t("check","box");
x.t("10.5.5.1","preexisting");
x.t("10.5.5.1","enable");
x.t("configuring","srdf");
x.t("configuring","fcip");
x.t("configuring","optimization");
x.t("features","configuring");
x.t("traffic","vmax");
x.t("traffic","uses");
x.t("traffic","originated");
x.t("traffic","add");
x.t("traffic","fcip");
x.t("traffic","handles");
x.t("traffic","standard");
x.t("traffic","selected");
x.t("traffic","suppose");
x.t("traffic","environments");
x.t("traffic","rios");
x.t("traffic","riverbed");
x.t("traffic","optionally");
x.t("traffic","without");
x.t("traffic","isolate");
x.t("large","contiguous");
x.t("tcp","connection");
x.t("tcp","instead");
x.t("tcp","consumer");
x.t("sure","peer");
x.t("brocade","7500");
x.t("requires","configuration");
x.t("commas","remove");
x.t("num","details");
x.t("desired","rule");
x.t("settings","permanently");
x.t("settings","select");
x.t("settings","running");
x.t("settings","configure");
x.t("vmax-to-vmax","srdf");
x.t("vmax-to-vmax","traffic");
x.t("range","2048");
x.t("range","note");
x.t("stored","memory");
x.t("box","dif");
x.t("box","next");
x.t("name","click");
x.t("fcip","connection");
x.t("fcip","default");
x.t("fcip","designed");
x.t("fcip","traffic");
x.t("fcip","tcp");
x.t("fcip","settings");
x.t("fcip","gateway");
x.t("fcip","rule");
x.t("fcip","optimization");
x.t("fcip","ports");
x.t("fcip","display");
x.t("fcip","red");
x.t("fcip","headers");
x.t("fcip","gateways");
x.t("fcip","tunnel");
x.t("fcip","rules");
x.t("fcip","configuration");
x.t("fcip","connections");
x.t("fcip","page");
x.t("fcip","client-side");
x.t("fcip","data");
x.t("fcip","module");
x.t("fcip","port");
x.t("fcip","stat-port");
x.t("fcip","storage");
x.t("gateway","initiates");
x.t("gateway","increase");
x.t("gateway","tunnel");
x.t("gateway","opens");
x.t("reassembles","delivers");
x.t("changed","port");
x.t("manual","fcip");
x.t("addresses","cannot");
x.t("2048","bytes");
x.t("edit","fcip");
x.t("edit","rule");
x.t("distance","limitations");
x.t("skip","step");
x.t("dif","isolates");
x.t("dif","add");
x.t("dif","headers");
x.t("dif","select");
x.t("dif","header");
x.t("dif","rios");
x.t("dif","data");
x.t("dif","setting");
x.t("bytes","field");
x.t("bytes","default");
x.t("bytes","dif");
x.t("bytes","storage");
x.t("520","bytes");
x.t("handles","non-vmax");
x.t("overcome","distance");
x.t("provides","support");
x.t("3225","3226");
x.t("networking","current");
x.t("peer","steelhead");
x.t("further","interrupt");
x.t("rule","moves");
x.t("rule","always");
x.t("rule","source");
x.t("rule","uses");
x.t("rule","displays");
x.t("rule","look");
x.t("rule","however");
x.t("rule","default");
x.t("rule","details");
x.t("rule","list");
x.t("rule","add");
x.t("rule","number");
x.t("rule","control");
x.t("rule","optimizes");
x.t("rule","click");
x.t("rule","choose");
x.t("rule","position");
x.t("rule","isolate");
x.t("rule","specify");
x.t("ibm","iseries");
x.t("originates","traffic");
x.t("uninterrupted","storage");
x.t("standard","block");
x.t("standard","ports");
x.t("3226","3227");
x.t("restart","optimization");
x.t("optimized","connections");
x.t("3227","3228");
x.t("arrays","source");
x.t("arrays","pair");
x.t("arrays","need");
x.t("completing","fcip");
x.t("optimizing","connection");
x.t("destination","10.5.5.1");
x.t("destination","traffic");
x.t("destination","address");
x.t("destination","specify");
x.t("address","fcip");
x.t("address","rule");
x.t("address","destination");
x.t("address","fields");
x.t("address","tunnel");
x.t("address","cannot");
x.t("preexisting","default");
x.t("optimization","looks");
x.t("optimization","add");
x.t("optimization","features");
x.t("optimization","configuring");
x.t("optimization","fcip");
x.t("optimization","changed");
x.t("optimization","provides");
x.t("optimization","chapter");
x.t("optimization","enable");
x.t("optimization","disabled");
x.t("optimization","module");
x.t("optimization","choose");
x.t("optimization","service");
x.t("tcp/ip","(fcip)");
x.t("integrity","field");
x.t("integrity","note");
x.t("3228","fcip");
x.t("fields","specifying");
x.t("fibre","channel");
x.t("contain","least");
x.t("contain","changing");
x.t("stream","every");
x.t("stream","add");
x.t("stream","dif");
x.t("stream","reduce");
x.t("ports","field");
x.t("ports","require");
x.t("ports","entering");
x.t("ports","requires");
x.t("ports","3225");
x.t("ports","ports");
x.t("defining","match");
x.t("facilities","networks");
x.t("selected","moves");
x.t("selected","rule");
x.t("selected","select");
x.t("selected","move");
x.t("selected","rules");
x.t("display","fcip");
x.t("error","icon");
x.t("error","details");
x.t("(fcip)","transparent");
x.t("red","protocol");
x.t("next","desired");
x.t("next","name");
x.t("arrow","next");
x.t("carrying","vmax-to-vmax");
x.t("carrying","vmax-to-");
x.t("suppose","environment");
x.t("environments","inject");
x.t("environments","fcip");
x.t("environments","enable");
x.t("environments","windows");
x.t("environments","configuration");
x.t("environments","rf-originated");
x.t("environments","using");
x.t("environments","symmetrix");
x.t("headers","within");
x.t("headers","interrupt");
x.t("headers","rf-");
x.t("headers","fcip");
x.t("headers","further");
x.t("headers","contain");
x.t("headers","rios");
x.t("headers","application");
x.t("(srdf)","traffic");
x.t("select","check");
x.t("select","rule");
x.t("select","enable");
x.t("appears","notes");
x.t("appears","last");
x.t("appears","list");
x.t("reason","error");
x.t("command-line","interface");
x.t("mostly","regular");
x.t("10.0.0.1","destination");
x.t("non-vmax","fcip");
x.t("written","storage");
x.t("sdr","network");
x.t("sdr","match");
x.t("number","rule");
x.t("number","specify");
x.t("viewing","current");
x.t("viewing","fcip");
x.t("magnifying","glass");
x.t("control","description");
x.t("control","setting");
x.t("gateways","uses");
x.t("tunnel","carry");
x.t("tunnel","ports");
x.t("tunnel","carrying");
x.t("tunnel","10.0.0.1");
x.t("tunnel","endpoints");
x.t("0.0.0.0","source");
x.t("chapter","configuring");
x.t("restarting","optimization");
x.t("cannot","remove");
x.t("cannot","destination");
x.t("cannot","specify");
x.t("move","selected");
x.t("reduce","ability");
x.t("step","environments");
x.t("starting","stopping");
x.t("report","lists");
x.t("report","choose");
x.t("instead","fcip");
x.t("(dif)","headers");
x.t("begins","valid");
x.t("unix","linux");
x.t("match","source");
x.t("match","large");
x.t("opens","fcip");
x.t("verify","fcip");
x.t("verify","configuration");
x.t("vmax-to-","vmax");
x.t("switch","(mds)");
x.t("isolating","header");
x.t("initial","syn");
x.t("syn","enable");
x.t("syn","packet");
x.t("enable","fcip");
x.t("enable","dif");
x.t("enable","modify");
x.t("reports","networking");
x.t("reference","manual");
x.t("tunneling","protocol");
x.t("multilayer","director");
x.t("optimizes","difs");
x.t("optimizes","reassembles");
x.t("optimizes","remaining");
x.t("consumer","without");
x.t("disabled","details");
x.t("disabled","fcip");
x.t("endpoints","enable");
x.t("endpoints","note");
x.t("adds","rule");
x.t("rios","srdf");
x.t("rios","directs");
x.t("rios","separates");
x.t("rios","fcip");
x.t("rios","optimizes");
x.t("rios","v6.1");
x.t("header","every");
x.t("header","begins");
x.t("header","data");
x.t("environment","consists");
x.t("environment","unsure");
x.t("server-side","steelhead");
x.t("least","fcip");
x.t("memory","remove");
x.t("greater","data");
x.t("embedded","within");
x.t("click","apply");
x.t("click","add");
x.t("click","remove");
x.t("click","arrow");
x.t("click","magnifying");
x.t("click","save");
x.t("changing","protocol");
x.t("rules","table");
x.t("rules","complete");
x.t("rules","vmax-to-vmax");
x.t("rules","defining");
x.t("rules","click");
x.t("rules","isolate");
x.t("windows","unix");
x.t("technology","originates");
x.t("configuration","example");
x.t("configuration","steelhead");
x.t("configuration","complete");
x.t("configuration","stored");
x.t("configuration","rios");
x.t("configuration","click");
x.t("configuration","beyond");
x.t("configuration","described");
x.t("configuration","isolate");
x.t("appliances","default");
x.t("appliances","restarting");
x.t("appliances","running");
x.t("iseries","as/400");
x.t("deduplication","larger");
x.t("additional","configuration");
x.t("running","rios");
x.t("running","configuration");
x.t("value","512");
x.t("originate","traffic");
x.t("compromising","data");
x.t("rf-originated","srdf");
x.t("connections","current");
x.t("connections","look");
x.t("connections","list");
x.t("connections","completing");
x.t("connections","report");
x.t("connections","note");
x.t("view","combined");
x.t("view","fcip");
x.t("view","reason");
x.t("contiguous","data");
x.t("valid","range");
x.t("linux","inject");
x.t("page","fcip");
x.t("page","fibre");
x.t("page","select");
x.t("page","click");
x.t("page","rules");
x.t("sequence","numbers");
x.t("larger","uninterrupted");
x.t("client-side","server-side");
x.t("specifying","addresses");
x.t("module","steelhead");
x.t("module","details");
x.t("module","traffic");
x.t("module","settings");
x.t("module","optimizing");
x.t("module","environments");
x.t("configure","fcip");
x.t("configure","optimization");
x.t("configure","rios");
x.t("information","sequence");
x.t("information","storage");
x.t("data","reduction");
x.t("data","throughput");
x.t("data","workload");
x.t("data","replication");
x.t("data","steelhead");
x.t("data","facility");
x.t("data","payload");
x.t("data","block");
x.t("data","unless");
x.t("data","tcp");
x.t("data","bytes");
x.t("data","ibm");
x.t("data","integrity");
x.t("data","stream");
x.t("data","patterns");
x.t("host","environments");
x.t("save","settings");
x.t("save","save");
x.t("removing","fcip");
x.t("application","data");
x.t("application","column");
x.t("gige","ports");
x.t("stopping","optimization");
x.t("512","bytes");
x.t("512","standard");
x.t("512","click");
x.t("choose","reports");
x.t("choose","configure");
x.t("port","range");
x.t("port","restart");
x.t("port","number");
x.t("port","click");
x.t("port","numbers");
x.t("beyond","enabling");
x.t("described","following");
x.t("modifications","running");
x.t("(fc)","tunneling");
x.t("protocol","transmits");
x.t("protocol","state");
x.t("protocol","fcip");
x.t("protocol","error");
x.t("lan-to-wan","ratio");
x.t("note","source");
x.t("note","fcip");
x.t("note","environments");
x.t("note","view");
x.t("column","verify");
x.t("column","click");
x.t("two","fcip");
x.t("stat-port","num");
x.t("riverbed","deployment");
x.t("riverbed","command-line");
x.t("optionally","add");
x.t("numbers","headers");
x.t("numbers","separated");
x.t("packet","vary");
x.t("controls","adding");
x.t("storage","technologies");
x.t("storage","fcip");
x.t("storage","optimization");
x.t("storage","facilities");
x.t("storage","technology");
x.t("storage","data");
x.t("either","equal");
x.t("either","cisco");
x.t("separated","commas");
x.t("service","details");
x.t("service","edit");
x.t("service","viewing");
x.t("service","view");
x.t("service","adding");
x.t("following","properties");
x.t("following","table");
x.t("following","command");
x.t("following","rule");
x.t("system","environments");
x.t("management","console");
x.t("using","storage");
x.t("unsure","gateway");
x.t("remaining","traffic");
x.t("setting","source");
x.t("setting","open");
x.t("setting","default");
x.t("setting","512");
x.t("v6.1","later");
x.t("statistics","two");
x.t("adding","new");
x.t("adding","fcip");
x.t("adding","removing");
x.t("modify","fcip");
x.t("director","switch");
x.t("without","dif");
x.t("without","compromising");
x.t("without","protocol");
x.t("patterns","isolating");
x.t("isolate","optimize");
x.t("isolate","dif");
x.t("isolate","data");
x.t("position","rule");
x.t("position","click");
x.t("delivers","data");
x.t("symmetrix","remote");
x.t("symmetrix","ports");
x.t("symmetrix","gige");
x.t("glass","view");
x.t("ratio","either");
x.t("specify","connection");
x.t("specify","size");
x.t("specify","0.0.0.0");
x.t("specify","port");
x.t("specify","following");
x.t("as/400","host");
}
