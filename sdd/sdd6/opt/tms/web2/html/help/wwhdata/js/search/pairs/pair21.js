function FileData_Pairs(x)
{
x.t("modes","select");
x.t("particularly","optimizing");
x.t("upgrade","notes");
x.t("enabling","sdr-m");
x.t("enabling","option");
x.t("example","6050");
x.t("reduction","balance");
x.t("reduction","techniques");
x.t("reduction","choosing");
x.t("reduction","select");
x.t("reduction","maximum");
x.t("reduction","reduces");
x.t("reduction","benefits");
x.t("reduction","goal");
x.t("reduction","entirely");
x.t("available","steelhead");
x.t("available","wan");
x.t("available","restart");
x.t("provide","throughput");
x.t("notes","enabled");
x.t("throughput","maximize");
x.t("throughput","steelhead");
x.t("throughput","speed");
x.t("throughput","default");
x.t("throughput","during");
x.t("throughput","configuring");
x.t("throughput","eliminates");
x.t("throughput","keeping");
x.t("throughput","sdr-adaptive");
x.t("throughput","report");
x.t("throughput","achieve");
x.t("throughput","slightly");
x.t("throughput","changing");
x.t("throughput","amount");
x.t("throughput","discarding");
x.t("throughput","bandwidth");
x.t("throughput","even");
x.t("throughput","dynamically");
x.t("throughput","lan");
x.t("balance","throughput");
x.t("balance","connection");
x.t("compression","uses");
x.t("compression","increase");
x.t("compression","detects");
x.t("compression","performance");
x.t("compression","level");
x.t("compression","value");
x.t("compression","lan");
x.t("preferred","configuration");
x.t("clear","data");
x.t("workload","across");
x.t("cpus","thereby");
x.t("cpus","busy");
x.t("description","compression");
x.t("description","default");
x.t("description","segment");
x.t("contact","riverbed");
x.t("effects","disk");
x.t("sustained","throughput");
x.t("maximize","long");
x.t("table","setting");
x.t("trade-off","data");
x.t("appliance","processing");
x.t("appliance","models");
x.t("appliance","adapts");
x.t("appliance","reading");
x.t("mechanism","governed");
x.t("ensures","better");
x.t("related","topics");
x.t("improve","network");
x.t("improve","performance");
x.t("apply","apply");
x.t("apply","settings");
x.t("replication","steelhead");
x.t("replication","environments");
x.t("replication","workloads");
x.t("replication","adaptive");
x.t("replication","(dr)");
x.t("performs","data");
x.t("limits","performance");
x.t("synchronization","sdr-m");
x.t("optimal","results");
x.t("improving","performance");
x.t("steelhead","appliance");
x.t("steelhead","appliances");
x.t("steelhead","service");
x.t("permanently","related");
x.t("permanently","restart");
x.t("permanently","selected");
x.t("enabled","default");
x.t("enabled","sdr-adaptive");
x.t("maximizes","lan-side");
x.t("uses","cpu");
x.t("uses","high-bandwidth");
x.t("uses","less");
x.t("guidance","riverbed");
x.t("v6.0.x","later");
x.t("later","upgrade");
x.t("support","recommends");
x.t("support","help");
x.t("support","information");
x.t("support","riverbed");
x.t("hit","rates");
x.t("center","replication");
x.t("center","workloads");
x.t("mode","clear");
x.t("mode","network");
x.t("mode","restart");
x.t("mode","adaptive");
x.t("mode","san");
x.t("mode","choose");
x.t("mode","monitors");
x.t("mode","effect");
x.t("necessary","margin");
x.t("bar","choose");
x.t("best","steelhead");
x.t("type","data");
x.t("network-based","disk");
x.t("governed","throughput");
x.t("change","sdr-adaptive");
x.t("high-throughput","environments");
x.t("high-throughput","connections");
x.t("high-throughput","data");
x.t("evaluate","setting");
x.t("response","time");
x.t("response","based");
x.t("time","provide");
x.t("sections","describe");
x.t("connection","load");
x.t("connection","dynamically");
x.t("default","settings");
x.t("default","works");
x.t("default","rios");
x.t("default","value");
x.t("default","values");
x.t("default","setting");
x.t("disk-intensive","workloads");
x.t("back","compression");
x.t("speed","generally");
x.t("details","starting");
x.t("advanced","maximizes");
x.t("advanced","sdr-m");
x.t("new","adaptive");
x.t("achieving","optimal");
x.t("includes","default");
x.t("list","default");
x.t("list","control");
x.t("cpu","settings");
x.t("cpu","maximum");
x.t("cpu","drop-down");
x.t("recommends","select");
x.t("recommends","changing");
x.t("recommends","using");
x.t("recommends","setting");
x.t("improves","hit");
x.t("improves","end-to-end");
x.t("improves","disk");
x.t("optimize","rios");
x.t("optimize","lan");
x.t("benefit","settings");
x.t("benefit","changing");
x.t("elimination","(mse)");
x.t("during","periods");
x.t("menu","bar");
x.t("complete","configuration");
x.t("momentarily","achieving");
x.t("network","contact");
x.t("network","rios");
x.t("network","(lfn)");
x.t("high-bandwidth","wan");
x.t("wan","throughput");
x.t("wan","san");
x.t("wan","bandwidth");
x.t("increase","throughput");
x.t("results","improves");
x.t("configuring","cpu");
x.t("configuring","optimization");
x.t("configuring","in-path");
x.t("features","improving");
x.t("selects","technique");
x.t("traffic","setting");
x.t("large","page");
x.t("end-to-end","throughput");
x.t("high","lan-side");
x.t("high","data");
x.t("high","throughputs");
x.t("processed","effects");
x.t("writing","disk");
x.t("high-end","steelhead");
x.t("desired","effect");
x.t("detects","data");
x.t("multicore","balancing");
x.t("settings","balance");
x.t("settings","improve");
x.t("settings","permanently");
x.t("settings","cpu");
x.t("settings","complete");
x.t("settings","useful");
x.t("settings","environment");
x.t("settings","click");
x.t("settings","enhance");
x.t("settings","choose");
x.t("settings","cases");
x.t("settings","setting");
x.t("settings","balances");
x.t("equally","used");
x.t("maintain","consistent");
x.t("faster","throughput");
x.t("maximizing","throughput");
x.t("maximizing","wan");
x.t("performance","enabling");
x.t("performance","improving");
x.t("performance","connection");
x.t("performance","settings");
x.t("performance","degradation");
x.t("performance","receiving");
x.t("performance","display");
x.t("performance","chapter");
x.t("performance","enable");
x.t("performance","page");
x.t("performance","configure");
x.t("performance","note");
x.t("performance","riverbed");
x.t("margin","segments");
x.t("margin","segment");
x.t("corresponds","level");
x.t("enables","multicore");
x.t("v5.0.x","v5.5");
x.t("eliminates","disk");
x.t("avoid","performance");
x.t("sales","team");
x.t("provides","network-based");
x.t("provides","faster");
x.t("provides","data");
x.t("prior","upgrading");
x.t("peer","rios");
x.t("useful","handling");
x.t("useful","high-traffic");
x.t("restart","steelhead");
x.t("restart","steelheads");
x.t("implementations","default");
x.t("statistical","trends");
x.t("optimized","throughput");
x.t("optimizing","rios");
x.t("optimizing","cifs");
x.t("consistent","levels");
x.t("segments","longer");
x.t("writes","large");
x.t("writes","reads");
x.t("degradation","important");
x.t("optimization","features");
x.t("optimization","performance");
x.t("optimization","optimized");
x.t("optimization","application");
x.t("optimization","service");
x.t("segment","elimination");
x.t("segment","replacement");
x.t("write","disk");
x.t("write","i/o");
x.t("sets","compression");
x.t("thereby","maximizing");
x.t("receiving","data");
x.t("switching","mechanism");
x.t("relative","trade-off");
x.t("store","compression");
x.t("store","synchronization");
x.t("store","high-throughput");
x.t("store","default");
x.t("store","improves");
x.t("store","equally");
x.t("store","performance");
x.t("store","segment");
x.t("store","disk");
x.t("store","select");
x.t("store","option");
x.t("store","adaptive");
x.t("random","disk");
x.t("small","number");
x.t("small","data");
x.t("clusters","monitors");
x.t("legacy","change");
x.t("legacy","includes");
x.t("legacy","setting");
x.t("techniques","enable");
x.t("selected","new");
x.t("display","performance");
x.t("choosing","adaptive");
x.t("disk","enabling");
x.t("disk","throughput");
x.t("disk","write");
x.t("disk","latency");
x.t("disk","tip");
x.t("disk","defragmentation");
x.t("disk","seeks");
x.t("disk","i/o");
x.t("non-disk-based","data");
x.t("loads","scale");
x.t("keeping","cpus");
x.t("busy","core");
x.t("select","sdr-m");
x.t("select","rios");
x.t("select","adaptive");
x.t("select","following");
x.t("select","setting");
x.t("first","first");
x.t("first","click");
x.t("environments","optimize");
x.t("environments","sdr-m");
x.t("environments","data");
x.t("sdr-adaptive","advanced");
x.t("sdr-adaptive","prior");
x.t("sdr-adaptive","legacy");
x.t("sdr-adaptive","setting");
x.t("smaller","model");
x.t("long","fat");
x.t("minimum","compression");
x.t("control","description");
x.t("sdr","maintain");
x.t("processing","type");
x.t("number","high-throughput");
x.t("number","provides");
x.t("technique","used");
x.t("workloads","high");
x.t("workloads","optimization");
x.t("workloads","switching");
x.t("workloads","important");
x.t("workloads","configure");
x.t("maximum","throughput");
x.t("maximum","compression");
x.t("maximum","data");
x.t("better","distribution");
x.t("chapter","configuring");
x.t("different","steelhead");
x.t("different","data");
x.t("different","resources");
x.t("reads","monitors");
x.t("cannot","peer");
x.t("whether","changes");
x.t("specifies","relative");
x.t("balancing","ensures");
x.t("balancing","enables");
x.t("balancing","useful");
x.t("replace","data");
x.t("starting","stopping");
x.t("report","menu");
x.t("match","client-side");
x.t("changes","default");
x.t("changes","desired");
x.t("achieve","high");
x.t("blend","disk-based");
x.t("identical","high-end");
x.t("verify","whether");
x.t("handling","small");
x.t("works","best");
x.t("works","implementations");
x.t("algorithms","drop-down");
x.t("v5.5","changes");
x.t("employ","blend");
x.t("important","cannot");
x.t("important","caution");
x.t("enable","sustained");
x.t("enable","settings");
x.t("replaces","least");
x.t("replaces","data");
x.t("reduces","random");
x.t("sdr-m","performs");
x.t("sdr-m","mode");
x.t("sdr-m","click");
x.t("sdr-m","adaptive");
x.t("sdr-m","client-side");
x.t("sdr-m","efficient");
x.t("6050","6050");
x.t("6050","used");
x.t("reports","optimization");
x.t("benefits","sdr");
x.t("primary","goal");
x.t("level","high-throughput");
x.t("level","momentarily");
x.t("level","specifies");
x.t("level","riverbed");
x.t("slightly","less");
x.t("disabled","click");
x.t("disabled","multi-core");
x.t("rios","v6.0.x");
x.t("rios","v5.0.x");
x.t("rios","data");
x.t("rios","v6.0");
x.t("server-side","steelhead");
x.t("least","recently");
x.t("environment","uses");
x.t("cifs","nfs");
x.t("lan-side","throughput");
x.t("memory","prevents");
x.t("option","available");
x.t("option","yield");
x.t("(lfn)","utilization");
x.t("lower","number");
x.t("in-path","rules");
x.t("recently","used");
x.t("click","apply");
x.t("click","save");
x.t("enhance","rios");
x.t("consider","changing");
x.t("changing","default");
x.t("changing","performance");
x.t("changing","rios");
x.t("changing","policy");
x.t("project","maximum");
x.t("longer","necessary");
x.t("yield","high");
x.t("less","default");
x.t("less","cpu");
x.t("less","data");
x.t("rules","synchronizing");
x.t("appliances","details");
x.t("appliances","restart");
x.t("appliances","select");
x.t("appliances","workloads");
x.t("appliances","primary");
x.t("appliances","occasionally");
x.t("amount","data");
x.t("trends","employ");
x.t("latency","typically");
x.t("configuration","mode");
x.t("configuration","described");
x.t("running","rios");
x.t("value","corresponds");
x.t("value","minimum");
x.t("multi-core","balancing");
x.t("core","balancing");
x.t("selecting","rios");
x.t("drop-down","list");
x.t("san","replication");
x.t("adaptive","compression");
x.t("adaptive","data");
x.t("adaptive","streamlining");
x.t("periods","disk-intensive");
x.t("prepopulation","contact");
x.t("rates","data");
x.t("(dr)","data");
x.t("process","provides");
x.t("nfs","prepopulation");
x.t("fat","network");
x.t("connections","approximately");
x.t("read","write");
x.t("models","example");
x.t("models","smaller");
x.t("high-traffic","loads");
x.t("center-to-data","center");
x.t("turns","sets");
x.t("distribution","workload");
x.t("page","cpu");
x.t("page","benefit");
x.t("page","clusters");
x.t("page","adaptive");
x.t("page","data");
x.t("page","following");
x.t("client-side","server-side");
x.t("upgrading","rios");
x.t("separate","steelhead");
x.t("help","evaluate");
x.t("tip","changing");
x.t("data","reduction");
x.t("data","compression");
x.t("data","replication");
x.t("data","center");
x.t("data","processed");
x.t("data","margin");
x.t("data","store");
x.t("data","workloads");
x.t("data","stores");
x.t("data","rios");
x.t("data","center-to-data");
x.t("data","streamlining");
x.t("data","order");
x.t("configure","cpu");
x.t("configure","optimization");
x.t("optional","riverbed");
x.t("information","advanced");
x.t("received","first");
x.t("save","settings");
x.t("save","save");
x.t("team","generally");
x.t("goal","maximum");
x.t("goal","project");
x.t("goal","using");
x.t("caution","sdr-adaptive");
x.t("values","selecting");
x.t("replacement","algorithms");
x.t("replacement","policy");
x.t("policy","improve");
x.t("policy","selects");
x.t("policy","match");
x.t("policy","rios");
x.t("policy","choose");
x.t("policy","riverbed");
x.t("policy","fifo");
x.t("stopping","optimization");
x.t("application","traffic");
x.t("reviewing","optimized");
x.t("scale","back");
x.t("choose","reports");
x.t("choose","configure");
x.t("streamlining","modes");
x.t("streamlining","mode");
x.t("streamlining","setting");
x.t("efficient","used");
x.t("described","following");
x.t("note","segment");
x.t("note","select");
x.t("note","upgrading");
x.t("steelheads","avoid");
x.t("steelheads","running");
x.t("two","different");
x.t("two","identical");
x.t("topics","configuring");
x.t("cases","consider");
x.t("riverbed","support");
x.t("riverbed","recommends");
x.t("riverbed","sales");
x.t("riverbed","lru");
x.t("monitors","disk");
x.t("monitors","read");
x.t("monitors","controls");
x.t("based","statistical");
x.t("based","amount");
x.t("prevents","steelhead");
x.t("typically","preferred");
x.t("order","received");
x.t("controls","different");
x.t("utilization","configure");
x.t("utilization","system");
x.t("discarding","small");
x.t("defragmentation","writes");
x.t("entirely","memory");
x.t("following","table");
x.t("following","sections");
x.t("following","settings");
x.t("following","replacement");
x.t("used","default");
x.t("used","replace");
x.t("used","data");
x.t("used","two");
x.t("service","details");
x.t("service","sdr-m");
x.t("service","client-side");
x.t("service","note");
x.t("system","resources");
x.t("model","limits");
x.t("setting","particularly");
x.t("setting","compression");
x.t("setting","description");
x.t("setting","enabled");
x.t("setting","guidance");
x.t("setting","provides");
x.t("setting","prior");
x.t("setting","sdr-adaptive");
x.t("setting","verify");
x.t("setting","works");
x.t("setting","disabled");
x.t("setting","adaptive");
x.t("setting","optional");
x.t("setting","based");
x.t("setting","fifo");
x.t("using","available");
x.t("using","separate");
x.t("v6.0","default");
x.t("lru","optimizing");
x.t("lru","replaces");
x.t("levels","performance");
x.t("seeks","improves");
x.t("i/o","response");
x.t("across","cpus");
x.t("approximately","less");
x.t("fifo","replaces");
x.t("fifo","riverbed");
x.t("load","cpu");
x.t("describe","default");
x.t("occasionally","riverbed");
x.t("throughputs","benefit");
x.t("adapts","utilization");
x.t("balances","writes");
x.t("bandwidth","reduction");
x.t("bandwidth","steelheads");
x.t("effect","rios");
x.t("effect","reviewing");
x.t("synchronizing","peer");
x.t("even","primary");
x.t("(mse)","process");
x.t("reading","writing");
x.t("resources","available");
x.t("resources","optimize");
x.t("lan","throughput");
x.t("lan","maximizing");
x.t("generally","default");
x.t("generally","lower");
x.t("disk-based","non-disk-based");
x.t("dynamically","different");
x.t("dynamically","turns");
}
