#!/bin/sh
#
# chkconfig: 2345 26 74
# description: sensors is used for monitoring motherboard sensor values.
# config: /etc/sysconfig/sensors
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# See also the lm_sensors homepage at:
#     http://www2.lm-sensors.nu/~lm78/index.html

# It uses a config file /etc/sysconfig/sensors that contains the modules to
# be loaded/unloaded. That file is sourced into this one.

# The format of that file a shell script that simply defines the modules 
# in order as normal shell variables with the special names:
#    MODULE_1, MODULE_2, MODULE_3, etc.

# If sensors isn't supported by the kernel, try loading the module...
[ -e /sys/bus/i2c ] || /sbin/modprobe i2c-dev &>/dev/null

[ -e /sys/bus/i2c ] || sleep 1

# Don't bother if /sys/bus/i2c still doesn't exist, kernel doesn't have
# support for sensors.
[ -e /sys/bus/i2c ] || exit 0

CONFIG=/etc/sysconfig/lm_sensors

[ -r "$CONFIG" ] || exit 0
egrep '^MODULE_' $CONFIG &>/dev/null || exit 0

# Load config file
. "$CONFIG"

PSENSORS=/usr/bin/sensors

# Source function library.
. /etc/init.d/functions

RETVAL=0
prog="lm_sensors"

start() {
        echo -n $"Starting $prog: "
	/sbin/MAKEDEV i2c
        modules=`grep \^MODULE_ $CONFIG | wc -l | tr -d ' '`
        i=0
        while [ $i -lt $modules ] ; do
                module=`eval echo '$'MODULE_$i`
#		echo starting module __${module}__
		/sbin/modprobe $module &>/dev/null
		i=`expr $i + 1`
	done
        $PSENSORS -s

	RETVAL=$?
	if [ $RETVAL -eq 0 ] && touch /var/lock/subsys/sensors ; then
		echo_success
		echo
	else
		echo_failure
		echo
	fi
}

stop() {
        echo -n $"Stopping $prog: "

        modules=`grep \^MODULE_ $CONFIG | wc -l | tr -d ' '`
        i=`expr $modules`
        while [ $i -ge 0 ] ; do
                module=`eval echo '$'MODULE_$i`
		/sbin/modprobe -r $module &>/dev/null
		i=`expr $i - 1`
	done

	RETVAL=$?
	if [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/sensors ; then
		echo_success
		echo
	else
		echo_failure
		echo
	fi
}

dostatus() {
        $PSENSORS
	RETVAL=$?
}

restart() {
	stop
	start
	RETVAL=$?
}

condrestart() {
	[ -e /var/lock/subsys/sensors ] && restart || :
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	dostatus
	;;
  restart|reload)
	restart
	;;
  condrestart)
	condrestart
	;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart}"
	exit 1
esac

exit $RETVAL
