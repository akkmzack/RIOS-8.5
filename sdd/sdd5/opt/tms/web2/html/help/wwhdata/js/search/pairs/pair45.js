function FileData_Pairs(x)
{
x.t("degrade","snapmirror");
x.t("active","cycle");
x.t("deployments","steelhead");
x.t("provide","quick");
x.t("provide","maximum");
x.t("provide","often");
x.t("provide","additional");
x.t("10565","multipath");
x.t("reduction","important");
x.t("infor","mation");
x.t("balance","resource");
x.t("filer","table");
x.t("filer","default");
x.t("filer","list");
x.t("filer","add");
x.t("filer","name");
x.t("filer","sdr-default");
x.t("filer","volume/qtree");
x.t("filer","select");
x.t("filer","section");
x.t("filer","changes");
x.t("filer","rios");
x.t("filer","drop-down");
x.t("filer","policy");
x.t("filer","values");
x.t("filer","mirroring");
x.t("filer","choose");
x.t("filer","priority");
x.t("filer","optionally");
x.t("filer","separated");
x.t("filer","setting");
x.t("filer","tab");
x.t("filer","volume");
x.t("filer","filers");
x.t("five","volume");
x.t("priorities","using");
x.t("10566","snapmirror");
x.t("compression","filer");
x.t("compression","default");
x.t("compression","cold");
x.t("compression","snapmirror");
x.t("compression","others");
x.t("compression","sdr");
x.t("compression","(none)");
x.t("throughput","minimal");
x.t("severely","degrade");
x.t("every","snapshot");
x.t("every","minute");
x.t("files","during");
x.t("full","scalable");
x.t("scalable","data");
x.t("console","redisplays");
x.t("needs","source");
x.t("volume-based","qtree-based");
x.t("poor","network");
x.t("table","applies");
x.t("table","control");
x.t("description","provide");
x.t("description","filer");
x.t("description","optionally");
x.t("description","volume");
x.t("describes","create");
x.t("create","new");
x.t("source","ipv4");
x.t("source","destination");
x.t("source","recover");
x.t("source","filer-side");
x.t("source","result");
x.t("source","volume");
x.t("periodically","updates");
x.t("appliance","deployment");
x.t("appliance","improves");
x.t("appliance","optimizes");
x.t("appliance","choose");
x.t("always","contain");
x.t("replication","deployments");
x.t("replication","provide");
x.t("replication","(sdr-default)");
x.t("improve","wan");
x.t("apply","description");
x.t("apply","optimization");
x.t("apply","save");
x.t("directs","traffic");
x.t("(lz-only)","sdr");
x.t("performs","compression");
x.t("performs","sdr");
x.t("lowest","setting");
x.t("user","error");
x.t("steelhead","appliance");
x.t("steelhead","appliances");
x.t("qos","default");
x.t("qos","policies");
x.t("qos","assign");
x.t("qos","service");
x.t("permanently","enabled");
x.t("permanently","restart");
x.t("enabled","disabled");
x.t("snapshot","copy");
x.t("remote","sites");
x.t("remote","mirror");
x.t("sites","due");
x.t("field","always");
x.t("later","qos");
x.t("later","addresses");
x.t("redisplays","filer");
x.t("redisplays","rules");
x.t("uses","priority");
x.t("support","environments");
x.t("support","port");
x.t("marking","blocks");
x.t("overcoming","limited");
x.t("deployment","guide");
x.t("change","policy");
x.t("change","priority");
x.t("time","default");
x.t("time","recent");
x.t("distribute","data");
x.t("delete","modify");
x.t("mappings","filer");
x.t("volum","optimization");
x.t("however","wan");
x.t("qtrees","filer");
x.t("qtrees","user");
x.t("total","lan/wan");
x.t("back","distribute");
x.t("networks","addition");
x.t("default","volum");
x.t("default","low");
x.t("default","optimization");
x.t("default","snapmirror");
x.t("default","volumes");
x.t("default","rios");
x.t("default","rules");
x.t("default","policy");
x.t("default","priority");
x.t("automatically","add");
x.t("automatically","detects");
x.t("automatically","select");
x.t("comma","cannot");
x.t("costly","furthermore");
x.t("updates","remote");
x.t("updates","automatically");
x.t("updates","mirror");
x.t("updates","frequently");
x.t("advanced","qos");
x.t("dscp","value");
x.t("details","viewing");
x.t("details","starting");
x.t("details","data");
x.t("new","filer");
x.t("cold","first-pass");
x.t("getting","maximum");
x.t("low","lowest");
x.t("nearly","identical");
x.t("includes","compression");
x.t("initialization","days");
x.t("policies","based");
x.t("policies","individual");
x.t("list","optimization");
x.t("list","management");
x.t("complete","steelhead");
x.t("complete","wan");
x.t("complete","configuration");
x.t("add","filer");
x.t("add","delete");
x.t("add","new");
x.t("add","volume/qtree");
x.t("add","snapmirror");
x.t("add","volumes");
x.t("add","adds");
x.t("add","volume");
x.t("during","typical");
x.t("improves","performance");
x.t("assign","mappings");
x.t("assign","service");
x.t("benefit","snapmirror");
x.t("lz-only","performs");
x.t("lz-only","enables");
x.t("network","qos");
x.t("network","however");
x.t("network","quality");
x.t("wan","performance");
x.t("wan","netapp");
x.t("wan","applications");
x.t("wan","links");
x.t("due","large");
x.t("results","marking");
x.t("guide","configure");
x.t("applies","modifications");
x.t("remove","selected");
x.t("check","box");
x.t("configuring","optimization");
x.t("configuring","snapmirror");
x.t("features","configuring");
x.t("features","further");
x.t("mirror","provide");
x.t("mirror","periodically");
x.t("mirror","qtrees");
x.t("mirror","initialization");
x.t("mirror","copies");
x.t("mirror","reflect");
x.t("mirror","contains");
x.t("large","amount");
x.t("large","numbers");
x.t("traffic","steelhead");
x.t("traffic","overcoming");
x.t("traffic","standard");
x.t("traffic","collect");
x.t("traffic","click");
x.t("high","latency");
x.t("high","medium");
x.t("high","filer-");
x.t("cycle","time");
x.t("commas","specify");
x.t("detects","volumes");
x.t("settings","permanently");
x.t("settings","select");
x.t("settings","running");
x.t("settings","configure");
x.t("hours","complete");
x.t("name","five");
x.t("name","click");
x.t("name","volume");
x.t("name","specify");
x.t("creating","rule");
x.t("range","snapmirror");
x.t("stored","memory");
x.t("box","next");
x.t("minute","update");
x.t("performance","wan");
x.t("performance","statistics");
x.t("performance","visibility");
x.t("addresses","filer");
x.t("addresses","specify");
x.t("changed","port");
x.t("enables","compression");
x.t("perform","snapmirror");
x.t("frequently","every");
x.t("bytes","active");
x.t("ipv4","addresseses");
x.t("sdr-default","performs");
x.t("netapp","snapmirror");
x.t("netapp","storage");
x.t("netapp","ontap");
x.t("secondary","copy");
x.t("exists","backup");
x.t("introduces","following");
x.t("further","improve");
x.t("rule","list");
x.t("rule","snapmirror");
x.t("none","disables");
x.t("filer-default","uses");
x.t("filer-default","sets");
x.t("makes","source");
x.t("standard","port");
x.t("ipv6","addresses");
x.t("restart","optimization");
x.t("enabl","modify");
x.t("destination","address");
x.t("destination","filer-side");
x.t("destination","volume");
x.t("completing","snapmirror");
x.t("modifying","filer");
x.t("address","filer");
x.t("optimization","source");
x.t("optimization","steelhead");
x.t("optimization","support");
x.t("optimization","includes");
x.t("optimization","policies");
x.t("optimization","features");
x.t("optimization","configuring");
x.t("optimization","changed");
x.t("optimization","enabl");
x.t("optimization","snapmirror");
x.t("optimization","chapter");
x.t("optimization","disabled");
x.t("optimization","level");
x.t("optimization","module");
x.t("optimization","policy");
x.t("optimization","optionally");
x.t("optimization","service");
x.t("copies","hours");
x.t("pairs","fine-tune");
x.t("fine-tune","network");
x.t("sets","volume");
x.t("resource","loads");
x.t("device","called");
x.t("addition","rios");
x.t("ports","field");
x.t("contain","least");
x.t("volume/qtree","select");
x.t("volume/qtree","tab");
x.t("snapmirror","filer");
x.t("snapmirror","needs");
x.t("snapmirror","volume-based");
x.t("snapmirror","default");
x.t("snapmirror","details");
x.t("snapmirror","traffic");
x.t("snapmirror","settings");
x.t("snapmirror","restart");
x.t("snapmirror","optimization");
x.t("snapmirror","ports");
x.t("snapmirror","present");
x.t("snapmirror","display");
x.t("snapmirror","select");
x.t("snapmirror","whole");
x.t("snapmirror","reports");
x.t("snapmirror","replicates");
x.t("snapmirror","configuration");
x.t("snapmirror","connections");
x.t("snapmirror","page");
x.t("snapmirror","module");
x.t("snapmirror","port");
x.t("snapmirror","priority");
x.t("snapmirror","storage");
x.t("snapmirror","used");
x.t("snapmirror","statistics");
x.t("snapmirror","operations");
x.t("snapmirror","volume");
x.t("recent","update");
x.t("quick","acces");
x.t("quality","commonly");
x.t("present","performance");
x.t("selected","select");
x.t("selected","click");
x.t("configured","7-mode");
x.t("backup","copy");
x.t("error","archive");
x.t("blocks","filer");
x.t("blocks","add");
x.t("collect","snapmirror");
x.t("display","snapmirror");
x.t("choosing","reports");
x.t("loads","back");
x.t("red","task");
x.t("volumes","later");
x.t("volumes","qtrees");
x.t("volumes","updates");
x.t("volumes","associated");
x.t("volumes","filers");
x.t("ame","filer");
x.t("next","name");
x.t("environments","using");
x.t("mation","mirror");
x.t("means","incremental");
x.t("means","priority");
x.t("select","add");
x.t("select","check");
x.t("select","optimization");
x.t("select","enable");
x.t("select","priority");
x.t("select","predefined");
x.t("control","description");
x.t("control","netapp");
x.t("sdr","compression");
x.t("sdr","optimization");
x.t("sdr","applications");
x.t("others","getting");
x.t("viewing","snapmirror");
x.t("maximum","reduction");
x.t("maximum","throughput");
x.t("maximum","protection");
x.t("incremental","updates");
x.t("incremental","changes");
x.t("recover","disaster");
x.t("commonly","associated");
x.t("comments","add");
x.t("chapter","configuring");
x.t("recovery","replication");
x.t("cannot","specify");
x.t("restarting","optimization");
x.t("(sdr-default)","sdr");
x.t("starting","stopping");
x.t("types","snapmirror");
x.t("qtree","source");
x.t("qtree","mirror");
x.t("qtree","unavailable");
x.t("qtree","choose");
x.t("changes","source");
x.t("changes","existing");
x.t("identical","primary");
x.t("section","describes");
x.t("important","select");
x.t("important","maximum");
x.t("furthermore","limited");
x.t("task","mirror");
x.t("whole","assign");
x.t("enable","snapmirror");
x.t("reports","optimization");
x.t("reports","adding");
x.t("enterprises","choose");
x.t("often","severely");
x.t("often","costly");
x.t("replicates","data");
x.t("primary","copy");
x.t("optimizes","snapmirror");
x.t("disabled","benefit");
x.t("disabled","snapmirror");
x.t("filer-side","steelhead");
x.t("level","compression");
x.t("adds","filer");
x.t("adds","rule");
x.t("7-mode","snapmirror");
x.t("rios","directs");
x.t("rios","automatically");
x.t("rios","v8.5");
x.t("least","port");
x.t("(none)","full");
x.t("memory","remove");
x.t("event","disaster");
x.t("click","apply");
x.t("click","add");
x.t("click","remove");
x.t("click","save");
x.t("disaster","makes");
x.t("disaster","recovery");
x.t("disaster","data");
x.t("touch","large");
x.t("rules","table");
x.t("rules","apply");
x.t("existing","filer");
x.t("latency","provide");
x.t("latency","poor");
x.t("latency","without");
x.t("amount","data");
x.t("appliances","restarting");
x.t("appliances","running");
x.t("configuration","steelhead");
x.t("configuration","stored");
x.t("configuration","click");
x.t("configuration","described");
x.t("reflect","incremental");
x.t("value","volume");
x.t("running","rios");
x.t("running","configuration");
x.t("additional","comments");
x.t("ease","management");
x.t("drop-down","list");
x.t("wide-area","networks");
x.t("wide-area","network");
x.t("high-network","latency");
x.t("process","online");
x.t("alone","(lz-only)");
x.t("connections","completing");
x.t("connections","choosing");
x.t("view","snapmirror");
x.t("nonstandard","individual");
x.t("page","snapmirror");
x.t("page","click");
x.t("online","read-only");
x.t("schedule","updates");
x.t("corruption","mirror");
x.t("transfer","red");
x.t("v8.5","details");
x.t("v8.5","introduces");
x.t("lz-compression","alone");
x.t("medium","low");
x.t("medium","setting");
x.t("module","settings");
x.t("module","optimization");
x.t("configure","optimization");
x.t("configure","snapmirror");
x.t("configure","lz-compression");
x.t("data","source");
x.t("data","replication");
x.t("data","remote");
x.t("data","event");
x.t("data","corruption");
x.t("data","transfer");
x.t("data","tape");
x.t("data","configure");
x.t("data","volume");
x.t("data","ontap");
x.t("archive","data");
x.t("tape","balance");
x.t("typical","workday");
x.t("host","pairs");
x.t("addresseses","associate");
x.t("protection","ease");
x.t("result","process");
x.t("read-only","volume");
x.t("save","settings");
x.t("save","save");
x.t("unavailable","secondary");
x.t("lan/wan","bytes");
x.t("policy","filer");
x.t("policy","default");
x.t("policy","lz-only");
x.t("policy","none");
x.t("policy","filer-default");
x.t("policy","configure");
x.t("policy","setting");
x.t("policy","volume");
x.t("highest","high");
x.t("stopping","optimization");
x.t("values","default");
x.t("choose","perform");
x.t("choose","configure");
x.t("qtree-based","snapmirror");
x.t("called","filer");
x.t("mirroring","means");
x.t("port","10565");
x.t("port","10566");
x.t("port","range");
x.t("port","restart");
x.t("port","snapmirror");
x.t("port","numbers");
x.t("described","table");
x.t("modifications","running");
x.t("two","types");
x.t("priority","filer");
x.t("priority","qos");
x.t("priority","later");
x.t("priority","creating");
x.t("priority","filer-default");
x.t("priority","select");
x.t("priority","medium");
x.t("priority","volume");
x.t("predefined","filer");
x.t("copy","every");
x.t("copy","nearly");
x.t("copy","exists");
x.t("copy","primary");
x.t("copy","schedule");
x.t("applications","netapp");
x.t("applications","important");
x.t("based","source");
x.t("optionally","add");
x.t("optionally","specify");
x.t("disables","sdr");
x.t("filer-","default");
x.t("numbers","storage");
x.t("numbers","separated");
x.t("associate","filer");
x.t("first-pass","data");
x.t("storage","optimization");
x.t("storage","device");
x.t("storage","blocks");
x.t("used","mainly");
x.t("management","console");
x.t("management","enterprises");
x.t("links","often");
x.t("following","features");
x.t("individual","snapmirror");
x.t("individual","volumes");
x.t("service","details");
x.t("service","add");
x.t("service","destination");
x.t("service","viewing");
x.t("service","view");
x.t("service","class");
x.t("separated","comma");
x.t("separated","commas");
x.t("using","advanced");
x.t("using","netapp");
x.t("mainly","disaster");
x.t("class","dscp");
x.t("class","highest");
x.t("setting","change");
x.t("setting","default");
x.t("setting","volumes");
x.t("setting","means");
x.t("across","wide-area");
x.t("statistics","apply");
x.t("statistics","total");
x.t("tab","complete");
x.t("minimal","latency");
x.t("adding","modifying");
x.t("modify","files");
x.t("modify","snapmirror");
x.t("operations","two");
x.t("operations","across");
x.t("limited","bandwidth");
x.t("volume","priorities");
x.t("volume","filer");
x.t("volume","description");
x.t("volume","time");
x.t("volume","updates");
x.t("volume","mirror");
x.t("volume","name");
x.t("volume","sdr-default");
x.t("volume","optimization");
x.t("volume","snapmirror");
x.t("volume","qtree");
x.t("volume","host");
x.t("volume","priority");
x.t("associated","filer");
x.t("associated","wide-area");
x.t("visibility","control");
x.t("multipath","traffic");
x.t("without","compression");
x.t("bandwidth","high-network");
x.t("bandwidth","restrictions");
x.t("days","complete");
x.t("filers","snapmirror");
x.t("filers","touch");
x.t("workday","results");
x.t("restrictions","high");
x.t("ontap","configured");
x.t("ontap","data");
x.t("contains","data");
x.t("update","infor");
x.t("update","source");
x.t("acces","data");
x.t("specify","source");
x.t("specify","name");
x.t("specify","ipv6");
x.t("specify","ame");
x.t("specify","nonstandard");
x.t("specify","port");
x.t("specify","volume");
}
