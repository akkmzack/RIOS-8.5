function FileData_Pairs(x)
{
x.t("example","source");
x.t("example","fixed-target");
x.t("deployments","tcp");
x.t("deployments","optimizing");
x.t("deployments","scenarios");
x.t("differently","in-path");
x.t("looks","packet");
x.t("upgrade","need");
x.t("upgrade","consideration");
x.t("supports","terminated");
x.t("supports","topologies");
x.t("reduction","compression");
x.t("reduction","host");
x.t("reduction","used");
x.t("method","applies");
x.t("protocols","disadvantage");
x.t("exist","server-side");
x.t("considerations","best");
x.t("compression","none");
x.t("hints","dynamic");
x.t("proxy","perform");
x.t("receives","terminated");
x.t("applied","type");
x.t("applied","rios");
x.t("needs","including");
x.t("scalable","data");
x.t("initiating","syn");
x.t("initiating","client-side");
x.t("preserve","tcp/ip");
x.t("create","fixed-target");
x.t("create","individual");
x.t("integration","details");
x.t("appliance","looks");
x.t("appliance","proxy");
x.t("appliance","create");
x.t("appliance","uses");
x.t("appliance","deployment");
x.t("appliance","finds");
x.t("appliance","fixed-target");
x.t("appliance","optimization");
x.t("appliance","configured");
x.t("appliance","reduces");
x.t("appliance","in-path");
x.t("appliance","server-side");
x.t("appliance","rios");
x.t("appliance","rules");
x.t("appliance","client-side");
x.t("appliance","result");
x.t("appliance","treats");
x.t("appliance","behavior");
x.t("appliance","packet-mode");
x.t("source","destination");
x.t("enhances","connection");
x.t("required","oracle");
x.t("normal","none");
x.t("always","tcp");
x.t("action","example");
x.t("action","field");
x.t("action","specified");
x.t("apply","rule");
x.t("ssl","support");
x.t("performs","sdr");
x.t("performs","packet-by-packet");
x.t("improve","application");
x.t("steelhead","appliance");
x.t("steelhead","appliances");
x.t("handshake","steelhead");
x.t("creates","inner");
x.t("enabled","client-");
x.t("uses","match");
x.t("field","steelhead");
x.t("later","includes");
x.t("later","expands");
x.t("later","packet-mode");
x.t("interface","physical");
x.t("interface","virtual");
x.t("physical","in-path");
x.t("deployment","needs");
x.t("deployment","guide");
x.t("deployment","options");
x.t("deployment","scenario");
x.t("deployment","running");
x.t("support","http");
x.t("support","variety");
x.t("support","latency");
x.t("support","neural");
x.t("support","topologies");
x.t("marking","packet-mode");
x.t("type","optimization");
x.t("type","in-path");
x.t("type","latency");
x.t("type","data");
x.t("payload","packets");
x.t("payload","data");
x.t("change","existing");
x.t("originated","client");
x.t("best","practices");
x.t("packets","performs");
x.t("packets","traffic");
x.t("packets","in-path");
x.t("packets","packet-mode");
x.t("connection","flow");
x.t("connection","connections");
x.t("connection","using");
x.t("connection","initiated");
x.t("arrives","wan0_0");
x.t("arrives","lan");
x.t("regardless","whether");
x.t("pbr","tcpv6");
x.t("channel","steelhead");
x.t("channel","characteristics");
x.t("require","configuration");
x.t("default","optimization");
x.t("default","tcpv6");
x.t("details","configuring");
x.t("details","creating");
x.t("details","ipv6");
x.t("want","steelhead");
x.t("diverse","protocols");
x.t("dscp","marking");
x.t("usually","initiated");
x.t("configurations","differ");
x.t("includes","fixed-target");
x.t("includes","tcp");
x.t("passes","according");
x.t("list","fields");
x.t("finds","matching");
x.t("fixed-target","auto-");
x.t("fixed-target","rules");
x.t("fixed-target","packet-mode");
x.t("discovery","actions");
x.t("policies","normal");
x.t("policies","optimize");
x.t("policies","special");
x.t("http","support");
x.t("http","traffic");
x.t("proxy-mode","optimization");
x.t("client-","server-side");
x.t("need","configure");
x.t("actions","allow");
x.t("optimize","tcpv4");
x.t("optimize","connections");
x.t("udp","flows");
x.t("group","packets");
x.t("according","action");
x.t("according","default");
x.t("guide","configure");
x.t("wan","visibility");
x.t("wan","packet-mode");
x.t("simple","approach");
x.t("applies","data");
x.t("practices","steelhead");
x.t("overview","details");
x.t("overview","chapter");
x.t("overview","in-path");
x.t("configuring","in-path");
x.t("tcp","hints");
x.t("tcp","handshake");
x.t("tcp","channel");
x.t("tcp","proxy-mode");
x.t("tcp","udp");
x.t("tcp","optimization");
x.t("tcp","syn");
x.t("tcp","port");
x.t("v7.0","later");
x.t("traffic","passes");
x.t("traffic","optimizing");
x.t("traffic","addition");
x.t("traffic","terminated");
x.t("traffic","rios");
x.t("traffic","connections");
x.t("traffic","special");
x.t("traffic","traversing");
x.t("traffic","flowing");
x.t("traffic","using");
x.t("traffic","flows");
x.t("interceptor","integration");
x.t("specified","in-path");
x.t("requirements","specify");
x.t("creating","in-path");
x.t("settings","support");
x.t("direction","tcpv6");
x.t("toward","server");
x.t("clients","in-path");
x.t("oracle","forms");
x.t("performance","benefits");
x.t("virtual","in-path");
x.t("ipv4","ipv6");
x.t("disadvantage","lack");
x.t("perform","intelligent");
x.t("rule","upgrade");
x.t("rule","action");
x.t("rule","creates");
x.t("rule","configurations");
x.t("rule","define");
x.t("rule","characteristics");
x.t("rule","syn");
x.t("rule","optimizes");
x.t("rule","in-path");
x.t("rule","specific");
x.t("rule","upgrading");
x.t("rule","client-side");
x.t("rule","used");
x.t("none","http");
x.t("none","vlan");
x.t("provides","simple");
x.t("inner","channel");
x.t("inner","tcpv4");
x.t("determine","steelhead");
x.t("optimized","in-path");
x.t("ipv6","deployment");
x.t("ipv6","traffic");
x.t("ipv6","optimization");
x.t("ipv6","using");
x.t("continue","passing");
x.t("destination","port");
x.t("destination","subnet");
x.t("address","vlan");
x.t("address","port");
x.t("preoptimization","policies");
x.t("modification","deployments");
x.t("optimizing","server-to-client");
x.t("fields","example");
x.t("fields","steelhead");
x.t("allow","choose");
x.t("optimization","supports");
x.t("optimization","applied");
x.t("optimization","improve");
x.t("optimization","enabled");
x.t("optimization","support");
x.t("optimization","policies");
x.t("optimization","optimize");
x.t("optimization","tcp");
x.t("optimization","provides");
x.t("optimization","rule");
x.t("optimization","ipv6");
x.t("optimization","continue");
x.t("optimization","tcpv6");
x.t("optimization","terminated");
x.t("optimization","reduce");
x.t("optimization","in-path");
x.t("optimization","rios");
x.t("optimization","rules");
x.t("optimization","include");
x.t("optimization","upgrading");
x.t("optimization","happens");
x.t("optimization","universal");
x.t("optimization","(terminated-mode)");
x.t("optimization","packet-mode");
x.t("tcp/ip","address");
x.t("differ","depending");
x.t("addition","rios");
x.t("flow","reporting");
x.t("earlier","v8.5");
x.t("vlan","tcp");
x.t("vlan","vlans");
x.t("vlan","tags");
x.t("tcpv4","tcp");
x.t("tcpv4","tcpv6");
x.t("tcpv4","udpv4");
x.t("tcpv4","udpv6");
x.t("small","group");
x.t("pass-through","in-path");
x.t("configured","initiating");
x.t("configured","client-");
x.t("configured","server-to-client");
x.t("auto-","discovery");
x.t("sometimes","want");
x.t("backup","steelhead");
x.t("tcpv6","connection");
x.t("tcpv6","traffic");
x.t("tcpv6","rule");
x.t("tcpv6","udpv6");
x.t("tcpv6","connections");
x.t("first","initiating");
x.t("options","steelhead");
x.t("serial","cluster");
x.t("sdr","data");
x.t("sdr","bandwidth");
x.t("terminated","tcp");
x.t("terminated","optimization");
x.t("reporting","packet-mode");
x.t("approach","steelhead");
x.t("cluster","interceptor");
x.t("design","considerations");
x.t("chapter","configuring");
x.t("whether","connections");
x.t("advantage","packet-mode");
x.t("receive","terminated");
x.t("receive","packet-mode");
x.t("define","inner");
x.t("vlans","preoptimization");
x.t("reduce","amount");
x.t("instead","packet-mode");
x.t("scenario","connections");
x.t("characteristics","create");
x.t("characteristics","using");
x.t("match","default");
x.t("match","syn");
x.t("wan0_0","interface");
x.t("handling","required");
x.t("transport","streamlining");
x.t("transport","protocol");
x.t("syn","packets");
x.t("syn","packet");
x.t("scenarios","tcp");
x.t("scenarios","associated");
x.t("client","toward");
x.t("client","receive");
x.t("client","match");
x.t("client","connections");
x.t("client","configure");
x.t("client","server");
x.t("reduces","payload");
x.t("framing","requirements");
x.t("optimizes","bandwidth");
x.t("benefits","transport");
x.t("master","backup");
x.t("in-path","deployments");
x.t("in-path","virtual");
x.t("in-path","rule");
x.t("in-path","rules");
x.t("in-path","wccp/pbr");
x.t("rios","enhances");
x.t("rios","performs");
x.t("rios","v7.0");
x.t("rios","v8.0.x");
x.t("rios","v8.0");
x.t("rios","v8.5");
x.t("server-side","steelhead");
x.t("v8.0.x","earlier");
x.t("v8.0.x","v8.5");
x.t("rules","differently");
x.t("rules","exist");
x.t("rules","steelhead");
x.t("rules","type");
x.t("rules","overview");
x.t("rules","determine");
x.t("rules","configured");
x.t("rules","design");
x.t("rules","in-path");
x.t("rules","client-side");
x.t("rules","result");
x.t("rules","ordered");
x.t("rules","described");
x.t("rules","used");
x.t("rules","effect");
x.t("rules","packet-mode");
x.t("rules","matching");
x.t("consider","deployment");
x.t("consider","using");
x.t("existing","in-path");
x.t("udpv4","pbr");
x.t("latency","policies");
x.t("latency","optimization");
x.t("latency","instead");
x.t("include","tcpv4");
x.t("appliances","rios");
x.t("appliances","running");
x.t("appliances","run");
x.t("variety","deployment");
x.t("amount","traffic");
x.t("configuration","modification");
x.t("v8.0","packet-mode");
x.t("udpv6","traffic");
x.t("udpv6","master");
x.t("udpv6","client-side");
x.t("packet-by-packet","sdr");
x.t("running","rios");
x.t("already","established");
x.t("depending","action");
x.t("specific","vlan");
x.t("figure","fixed-target");
x.t("connections","receives");
x.t("connections","originated");
x.t("connections","usually");
x.t("connections","optimized");
x.t("connections","already");
x.t("connections","originating");
x.t("connections","using");
x.t("connections","initiated");
x.t("forms","ssl");
x.t("neural","framing");
x.t("lack","performance");
x.t("originating","client");
x.t("established","regardless");
x.t("client-side","steelhead");
x.t("client-side","server-side");
x.t("v8.5","supports");
x.t("v8.5","later");
x.t("v8.5","deployment");
x.t("v8.5","change");
x.t("v8.5","require");
x.t("v8.5","details");
x.t("v8.5","includes");
x.t("v8.5","consider");
x.t("dynamic","wan");
x.t("upgrading","client-");
x.t("upgrading","rios");
x.t("configure","pass-through");
x.t("configure","in-path");
x.t("configure","optional");
x.t("data","reduction");
x.t("data","payload");
x.t("data","streamlining");
x.t("optional","settings");
x.t("information","creating");
x.t("host","steelhead");
x.t("typical","terminated");
x.t("tags","apply");
x.t("result","traffic");
x.t("result","server-to-client");
x.t("happens","rios");
x.t("labels","dscp");
x.t("application","latency");
x.t("application","streamlining");
x.t("application","prediction");
x.t("wccp/pbr","tcpv4");
x.t("out-of-path","serial");
x.t("ordered","list");
x.t("port","in-path");
x.t("port","information");
x.t("port","labels");
x.t("port","port");
x.t("choose","type");
x.t("described","overview");
x.t("universal","method");
x.t("streamlining","steelhead");
x.t("streamlining","diverse");
x.t("streamlining","application");
x.t("prediction","figure");
x.t("protocol","sometimes");
x.t("consideration","upgrading");
x.t("treats","packets");
x.t("treats","packet");
x.t("expands","packet-mode");
x.t("applications","transport");
x.t("packet","steelhead");
x.t("packet","arrives");
x.t("packet","connection");
x.t("packet","according");
x.t("packet","fields");
x.t("packet","small");
x.t("(terminated-mode)","rule");
x.t("controls","source");
x.t("used","type");
x.t("used","connection");
x.t("used","scenarios");
x.t("used","packet-mode");
x.t("subnet","source");
x.t("subnet","address");
x.t("run","rios");
x.t("special","handling");
x.t("traversing","wan");
x.t("individual","tcp");
x.t("using","scalable");
x.t("using","fixed-target");
x.t("using","typical");
x.t("using","controls");
x.t("using","packet-mode");
x.t("flowing","server");
x.t("initiated","clients");
x.t("initiated","client");
x.t("initiated","connections");
x.t("server-to-client","fixed-target");
x.t("server-to-client","traffic");
x.t("server-to-client","direction");
x.t("client-to-server","traffic");
x.t("behavior","syn");
x.t("associated","first");
x.t("visibility","preserve");
x.t("effect","connections");
x.t("including","optimization");
x.t("bandwidth","optimization");
x.t("bandwidth","applications");
x.t("passing","client-to-server");
x.t("topologies","physical");
x.t("topologies","out-of-path");
x.t("packet-mode","upgrade");
x.t("packet-mode","ipv4");
x.t("packet-mode","optimization");
x.t("packet-mode","tcpv4");
x.t("packet-mode","consider");
x.t("packet-mode","rules");
x.t("matching","client");
x.t("matching","in-path");
x.t("lan","interface");
x.t("specify","always");
x.t("flows","ipv4");
x.t("flows","advantage");
x.t("intelligent","application");
x.t("server","traffic");
x.t("server","receive");
x.t("server","client");
}
