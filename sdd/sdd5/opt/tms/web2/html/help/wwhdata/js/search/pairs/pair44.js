function FileData_Pairs(x)
{
x.t("equal","greater");
x.t("deployments","steelhead");
x.t("vmax","arrays");
x.t("vmax","enginuity");
x.t("vmax","gige");
x.t("example","assign");
x.t("example","sure");
x.t("example","oracle");
x.t("example","standard");
x.t("example","customize");
x.t("example","types");
x.t("255","rios");
x.t("looks","dif");
x.t("mainframe","traffic");
x.t("mainframe","environments");
x.t("emc","solutions");
x.t("emc","symmetrix");
x.t("reduction","policies");
x.t("reduction","group");
x.t("reduction","important");
x.t("reduction","level");
x.t("reduction","policy");
x.t("reduction","lan-to-wan");
x.t("reduction","setting");
x.t("reduction","levels");
x.t("notes","column");
x.t("provide","srdf");
x.t("available","application");
x.t("hexadecimal","ranging");
x.t("throughput","environments");
x.t("compression","full");
x.t("compression","description");
x.t("compression","cold");
x.t("compression","oracle");
x.t("compression","perform");
x.t("compression","headers");
x.t("compression","sdr");
x.t("compression","characteristics");
x.t("version","5874");
x.t("version","5875");
x.t("moves","new");
x.t("moves","selected");
x.t("srdf","connection");
x.t("srdf","default");
x.t("srdf","traffic");
x.t("srdf","tcp");
x.t("srdf","selective");
x.t("srdf","settings");
x.t("srdf","rule");
x.t("srdf","optimization");
x.t("srdf","ports");
x.t("srdf","display");
x.t("srdf","red");
x.t("srdf","headers");
x.t("srdf","environments");
x.t("srdf","reports");
x.t("srdf","header");
x.t("srdf","rios");
x.t("srdf","rules");
x.t("srdf","configuration");
x.t("srdf","connections");
x.t("srdf","page");
x.t("srdf","client-side");
x.t("srdf","module");
x.t("srdf","data");
x.t("srdf","port");
x.t("srdf","protocol");
x.t("srdf","storage");
x.t("implement","srdf");
x.t("workload","compression");
x.t("workload","dif");
x.t("workload","written");
x.t("scalable","data");
x.t("within","srdf");
x.t("within","group");
x.t("within","data");
x.t("lists","connection");
x.t("full","scalable");
x.t("hyphens","underscores");
x.t("console","redisplays");
x.t("every","520");
x.t("every","512");
x.t("sending","initial");
x.t("describes","apply");
x.t("table","applies");
x.t("table","control");
x.t("description","add");
x.t("description","describe");
x.t("isolates","optimizes");
x.t("currently","include");
x.t("appliance","performs");
x.t("appliance","deployment");
x.t("appliance","closest");
x.t("appliance","check");
x.t("appliance","selective");
x.t("appliance","rios");
x.t("appliance","associate");
x.t("always","contain");
x.t("always","appears");
x.t("source","address");
x.t("source","destination");
x.t("source","ips");
x.t("source","specify");
x.t("required","enable");
x.t("related","topics");
x.t("replication","deployments");
x.t("replication","product");
x.t("replication","add");
x.t("replication","(sdr)");
x.t("replication","enable");
x.t("replication","data");
x.t("replication","gige");
x.t("replication","note");
x.t("performs","compression");
x.t("performs","sdr");
x.t("performs","data");
x.t("ability","scalable");
x.t("directs","traffic");
x.t("difs","embedded");
x.t("apply","custom");
x.t("apply","different");
x.t("apply","save");
x.t("symm","group");
x.t("symm","specify");
x.t("steelhead","appliance");
x.t("steelhead","network");
x.t("steelhead","appliances");
x.t("permanently","related");
x.t("permanently","enabled");
x.t("permanently","restart");
x.t("enabled","disabled");
x.t("current","connection");
x.t("current","default");
x.t("current","connections");
x.t("remote","data");
x.t("technologies","originate");
x.t("separates","srdf");
x.t("field","always");
x.t("field","required");
x.t("later","environments");
x.t("later","report");
x.t("0-254","group");
x.t("until","symmetrix");
x.t("uses","0.0.0.0");
x.t("uses","in-path");
x.t("redisplays","list");
x.t("redisplays","rules");
x.t("last","list");
x.t("support","environments");
x.t("deployment","guide");
x.t("state","information");
x.t("interrupt","network");
x.t("interrupt","data");
x.t("icon","appears");
x.t("facility","(rdf)");
x.t("displays","controls");
x.t("displays","tabs");
x.t("necessary","5875");
x.t("originated","srdf");
x.t("originated","symmetrix");
x.t("vary","environment");
x.t("initiates","syn");
x.t("payload","details");
x.t("best","optimization");
x.t("open","systems");
x.t("open","system");
x.t("older","add");
x.t("change","default");
x.t("change","dif");
x.t("connection","srdf");
x.t("connection","sending");
x.t("connection","source");
x.t("connection","normally");
x.t("connection","tcp");
x.t("connection","destination");
x.t("connection","verify");
x.t("connection","reports");
x.t("connection","client-side");
x.t("however","change");
x.t("(as/400)","host");
x.t("product","performs");
x.t("channel","using");
x.t("require","configuration");
x.t("closest","symmetrix");
x.t("default","srdf");
x.t("default","performs");
x.t("default","includes");
x.t("default","rule");
x.t("default","sdr");
x.t("default","rios");
x.t("default","value");
x.t("default","data");
x.t("default","setting");
x.t("default","mainframe-attached");
x.t("automatically","detects");
x.t("inject","dif");
x.t("details","creating");
x.t("details","viewing");
x.t("details","starting");
x.t("details","data");
x.t("details","storage");
x.t("getting","maximum");
x.t("cold","first-pass");
x.t("distinct","per");
x.t("new","rule");
x.t("new","position");
x.t("includes","compression");
x.t("block","size");
x.t("block","storage");
x.t("size","open");
x.t("size","standard");
x.t("size","specify");
x.t("need","additional");
x.t("policies","source");
x.t("policies","complete");
x.t("policies","drop-down");
x.t("policies","data");
x.t("list","applies");
x.t("list","edit");
x.t("list","cannot");
x.t("list","override");
x.t("list","management");
x.t("automatically-detected","srdf");
x.t("complete","skip");
x.t("complete","configuration");
x.t("optimize","difs");
x.t("optimize","traffic");
x.t("group","example");
x.t("group","provide");
x.t("group","until");
x.t("group","maximizing");
x.t("group","virtual");
x.t("group","encrypted");
x.t("group","reducible");
x.t("group","number");
x.t("group","represents");
x.t("group","section");
x.t("group","excess");
x.t("group","override");
x.t("group","policy");
x.t("group","numbers");
x.t("group","specify");
x.t("machine","images");
x.t("assign","lz-only");
x.t("assign","group");
x.t("assign","levels");
x.t("lz-only","compression");
x.t("add","srdf");
x.t("add","symm");
x.t("add","new");
x.t("add","group");
x.t("add","manual");
x.t("add","adds");
x.t("add","rdf");
x.t("add","symmetrix");
x.t("replicate","mainframe");
x.t("guide","increase");
x.t("guide","configure");
x.t("increase","data");
x.t("network","stream");
x.t("network","deduplication");
x.t("network","note");
x.t("presented","steelhead");
x.t("isolation","environments");
x.t("check","images");
x.t("check","box");
x.t("check","lan-side");
x.t("normally","details");
x.t("wan","bandwidth");
x.t("images","default");
x.t("images","assign");
x.t("images","rdf");
x.t("serving","open");
x.t("applies","modifications");
x.t("remove","default");
x.t("remove","selected");
x.t("unless","change");
x.t("configuring","srdf");
x.t("configuring","fcip");
x.t("configuring","optimization");
x.t("features","configuring");
x.t("traffic","vmax");
x.t("traffic","currently");
x.t("traffic","originated");
x.t("traffic","automatically-detected");
x.t("traffic","standard");
x.t("traffic","selected");
x.t("traffic","environments");
x.t("traffic","rios");
x.t("traffic","originating");
x.t("traffic","gige");
x.t("traffic","optionally");
x.t("traffic","manually");
x.t("traffic","symmetrix");
x.t("large","contiguous");
x.t("tcp","connection");
x.t("tcp","instead");
x.t("tcp","consumer");
x.t("sure","peer");
x.t("depends","symmetrix");
x.t("spaces","special");
x.t("requires","configuration");
x.t("commas","specify");
x.t("selective","optimization");
x.t("detects","presence");
x.t("desired","rule");
x.t("settings","permanently");
x.t("settings","select");
x.t("settings","enginuity");
x.t("settings","running");
x.t("settings","configure");
x.t("creating","srdf");
x.t("vmax-to-vmax","traffic");
x.t("range","srdf");
x.t("range","2048");
x.t("maximizing","steelhead");
x.t("enabler","report");
x.t("stored","memory");
x.t("box","next");
x.t("name","click");
x.t("(sdr)","sdr");
x.t("(sdr)","match");
x.t("reassembles","delivers");
x.t("fcip","optimization");
x.t("fcip","storage");
x.t("changed","port");
x.t("enables","find");
x.t("oracle","add");
x.t("oracle","logs");
x.t("addresses","cannot");
x.t("addresses","specific");
x.t("manual","srdf");
x.t("manual","rule");
x.t("2048","bytes");
x.t("edit","srdf");
x.t("edit","rule");
x.t("skip","step");
x.t("custom","data");
x.t("base","data");
x.t("virtual","machine");
x.t("perform","sdr");
x.t("dif","isolates");
x.t("dif","add");
x.t("dif","headers");
x.t("dif","header");
x.t("dif","rios");
x.t("dif","blocksize");
x.t("dif","data");
x.t("dif","setting");
x.t("bytes","default");
x.t("bytes","add");
x.t("bytes","dif");
x.t("bytes","storage");
x.t("520","bytes");
x.t("provides","support");
x.t("peer","steelhead");
x.t("exists","symmetrix");
x.t("rule","moves");
x.t("rule","always");
x.t("rule","uses");
x.t("rule","displays");
x.t("rule","however");
x.t("rule","default");
x.t("rule","details");
x.t("rule","list");
x.t("rule","add");
x.t("rule","control");
x.t("rule","number");
x.t("rule","isolating");
x.t("rule","optimizes");
x.t("rule","click");
x.t("rule","data");
x.t("rule","choose");
x.t("rule","position");
x.t("none","disables");
x.t("further","interrupt");
x.t("ibm","iseries");
x.t("originates","traffic");
x.t("uninterrupted","storage");
x.t("standard","block");
x.t("standard","port");
x.t("standard","symmetrix");
x.t("restart","optimization");
x.t("find","best");
x.t("originally","presented");
x.t("arrays","need");
x.t("arrays","assign");
x.t("arrays","serving");
x.t("arrays","report");
x.t("arrays","isolate");
x.t("completing","srdf");
x.t("optimizing","connection");
x.t("encrypted","check");
x.t("address","rule");
x.t("address","destination");
x.t("address","fields");
x.t("address","cannot");
x.t("address","symmetrix");
x.t("destination","traffic");
x.t("destination","address");
x.t("destination","specify");
x.t("optimization","looks");
x.t("optimization","srdf");
x.t("optimization","default");
x.t("optimization","policies");
x.t("optimization","features");
x.t("optimization","configuring");
x.t("optimization","depends");
x.t("optimization","selective");
x.t("optimization","settings");
x.t("optimization","changed");
x.t("optimization","enables");
x.t("optimization","provides");
x.t("optimization","encrypted");
x.t("optimization","viewing");
x.t("optimization","chapter");
x.t("optimization","enable");
x.t("optimization","disabled");
x.t("optimization","level");
x.t("optimization","module");
x.t("optimization","configure");
x.t("optimization","choose");
x.t("optimization","service");
x.t("optimization","setting");
x.t("array","initiates");
x.t("array","opens");
x.t("array","running");
x.t("array","compatibility");
x.t("reducible","data");
x.t("reducible","applications");
x.t("string","contain");
x.t("fields","embedded");
x.t("fields","specifying");
x.t("integrity","fields");
x.t("fibre","channel");
x.t("ports","steelhead");
x.t("ports","field");
x.t("ports","require");
x.t("ports","details");
x.t("ports","requires");
x.t("ports","ports");
x.t("ports","receiving");
x.t("ports","originating");
x.t("contain","hyphens");
x.t("contain","least");
x.t("contain","changing");
x.t("stream","every");
x.t("stream","dif");
x.t("stream","reduce");
x.t("stream","symmetrix");
x.t("characters","symmetrix");
x.t("defining","match");
x.t("earlier","source");
x.t("receiving","replication");
x.t("attempting","optimize");
x.t("microcode","version");
x.t("microcode","levels");
x.t("underscores","example");
x.t("selected","moves");
x.t("selected","creating");
x.t("selected","rule");
x.t("selected","select");
x.t("selected","move");
x.t("selected","rules");
x.t("display","srdf");
x.t("display","controls");
x.t("error","srdf");
x.t("error","icon");
x.t("error","appear");
x.t("error","occur");
x.t("configured","srdf");
x.t("red","protocol");
x.t("next","srdf");
x.t("next","desired");
x.t("next","name");
x.t("arrow","next");
x.t("environments","srdf");
x.t("environments","inject");
x.t("environments","replicate");
x.t("environments","enable");
x.t("environments","override");
x.t("environments","rios");
x.t("environments","windows");
x.t("environments","configuration");
x.t("environments","re-originated");
x.t("environments","using");
x.t("environments","gige-based");
x.t("headers","mainframe");
x.t("headers","within");
x.t("headers","field");
x.t("headers","interrupt");
x.t("headers","dif");
x.t("headers","further");
x.t("headers","contain");
x.t("headers","rios");
x.t("headers","application");
x.t("headers","symmetrix");
x.t("select","check");
x.t("select","rule");
x.t("select","display");
x.t("select","enable");
x.t("select","data");
x.t("appears","notes");
x.t("appears","last");
x.t("reason","error");
x.t("5874","example");
x.t("5874","older");
x.t("5874","earlier");
x.t("serial","number");
x.t("gateways","implement");
x.t("written","storage");
x.t("sdr","compression");
x.t("sdr","performs");
x.t("sdr","uses");
x.t("sdr","network");
x.t("sdr","virtual");
x.t("sdr","none");
x.t("sdr","optimization");
x.t("sdr","consider");
x.t("viewing","srdf");
x.t("viewing","current");
x.t("magnifying","glass");
x.t("side","steelhead");
x.t("control","description");
x.t("control","symmetrix");
x.t("number","rule");
x.t("number","000194900363");
x.t("number","symmetrix");
x.t("5875","later");
x.t("5875","environments");
x.t("5875","newer");
x.t("presence","dif");
x.t("maximum","reduction");
x.t("0.0.0.0","source");
x.t("chapter","configuring");
x.t("restarting","optimization");
x.t("customize","data");
x.t("different","optimization");
x.t("represents","override");
x.t("000194900363","spaces");
x.t("cannot","add");
x.t("cannot","remove");
x.t("cannot","destination");
x.t("cannot","specify");
x.t("move","selected");
x.t("(srdf/a)","san");
x.t("instead","srdf");
x.t("instead","fibre");
x.t("reduce","ability");
x.t("step","environments");
x.t("starting","stopping");
x.t("report","lists");
x.t("report","report");
x.t("report","rdf");
x.t("characteristics","data");
x.t("enginuity","microcode");
x.t("enginuity","5875");
x.t("ips","specify");
x.t("solutions","enabler");
x.t("begins","valid");
x.t("unix","linux");
x.t("match","source");
x.t("match","large");
x.t("opens","srdf");
x.t("verify","configuration");
x.t("section","describes");
x.t("types","data");
x.t("alphanumeric","string");
x.t("isolating","dif");
x.t("isolating","header");
x.t("initial","syn");
x.t("syn","configure");
x.t("syn","packet");
x.t("important","requiring");
x.t("enable","srdf");
x.t("enable","dif");
x.t("enable","modify");
x.t("reports","setting");
x.t("excess","wan");
x.t("optimizes","reassembles");
x.t("optimizes","data");
x.t("optimizes","remaining");
x.t("consumer","originally");
x.t("disabled","srdf");
x.t("disabled","details");
x.t("1748","srdf");
x.t("level","compression");
x.t("level","within");
x.t("level","configure");
x.t("level","applications");
x.t("level","rdf");
x.t("groups","apply");
x.t("groups","base");
x.t("override","distinct");
x.t("override","policies");
x.t("override","in-path");
x.t("override","manually");
x.t("ids","group");
x.t("adds","manual");
x.t("adds","policy");
x.t("rios","srdf");
x.t("rios","directs");
x.t("rios","separates");
x.t("rios","default");
x.t("rios","automatically");
x.t("rios","fcip");
x.t("rios","optimizing");
x.t("rios","optimizes");
x.t("rios","v6.1");
x.t("header","every");
x.t("header","isolation");
x.t("header","begins");
x.t("header","data");
x.t("environment","unsure");
x.t("server-side","steelhead");
x.t("least","port");
x.t("lan-side","symmetrix");
x.t("appear","next");
x.t("newer","manual");
x.t("newer","5874");
x.t("logs","optimization");
x.t("logs","rdf");
x.t("in-path","rule");
x.t("memory","remove");
x.t("greater","data");
x.t("embedded","within");
x.t("click","apply");
x.t("click","remove");
x.t("click","arrow");
x.t("click","magnifying");
x.t("click","save");
x.t("changing","protocol");
x.t("rules","srdf");
x.t("rules","table");
x.t("rules","necessary");
x.t("rules","complete");
x.t("rules","vmax-to-vmax");
x.t("rules","defining");
x.t("rules","click");
x.t("consider","example");
x.t("windows","unix");
x.t("technology","originates");
x.t("configuration","example");
x.t("configuration","steelhead");
x.t("configuration","complete");
x.t("configuration","stored");
x.t("configuration","rios");
x.t("configuration","click");
x.t("configuration","described");
x.t("configuration","isolate");
x.t("appliances","default");
x.t("appliances","restarting");
x.t("appliances","running");
x.t("iseries","(as/400)");
x.t("include","dif");
x.t("deduplication","larger");
x.t("additional","configuration");
x.t("running","vmax");
x.t("running","enginuity");
x.t("running","rios");
x.t("running","configuration");
x.t("hosts","using");
x.t("value","512");
x.t("san","replication");
x.t("originate","traffic");
x.t("compatibility","protocol");
x.t("specific","port");
x.t("specific","rdf");
x.t("specific","symmetrix");
x.t("drop-down","list");
x.t("blocksize","gige-based");
x.t("connections","current");
x.t("connections","completing");
x.t("connections","report");
x.t("view","srdf");
x.t("view","reason");
x.t("originating","replication");
x.t("originating","lan");
x.t("alone","sdr");
x.t("facility/asynchronous","(srdf/a)");
x.t("contiguous","data");
x.t("nonstandard","individual");
x.t("aggressive","data");
x.t("systems","hosts");
x.t("valid","range");
x.t("linux","inject");
x.t("page","emc");
x.t("page","srdf");
x.t("page","select");
x.t("page","rules");
x.t("page","symmetrix");
x.t("sequence","numbers");
x.t("larger","uninterrupted");
x.t("client-side","steelhead");
x.t("client-side","server-side");
x.t("lz-compression","alone");
x.t("specifying","addresses");
x.t("module","steelhead");
x.t("module","optimization");
x.t("module","environments");
x.t("module","configure");
x.t("module","enhanced");
x.t("configure","srdf");
x.t("configure","steelhead");
x.t("configure","custom");
x.t("configure","optimization");
x.t("configure","lz-compression");
x.t("data","reduction");
x.t("data","throughput");
x.t("data","workload");
x.t("data","replication");
x.t("data","steelhead");
x.t("data","facility");
x.t("data","payload");
x.t("data","getting");
x.t("data","block");
x.t("data","unless");
x.t("data","tcp");
x.t("data","oracle");
x.t("data","bytes");
x.t("data","ibm");
x.t("data","integrity");
x.t("data","stream");
x.t("data","facility/asynchronous");
x.t("data","configure");
x.t("data","associated");
x.t("data","patterns");
x.t("information","sequence");
x.t("re-originated","srdf");
x.t("facilitate","administration");
x.t("host","environments");
x.t("save","settings");
x.t("save","save");
x.t("removing","srdf");
x.t("gige","ports");
x.t("gige","instead");
x.t("application","data");
x.t("stopping","optimization");
x.t("policy","displays");
x.t("policy","default");
x.t("policy","list");
x.t("policy","add");
x.t("policy","select");
x.t("policy","specific");
x.t("policy","facilitate");
x.t("policy","overrides");
x.t("policy","rdf");
x.t("policy","symmetrix");
x.t("512","bytes");
x.t("512","standard");
x.t("choose","configure");
x.t("port","srdf");
x.t("port","originated");
x.t("port","range");
x.t("port","addresses");
x.t("port","restart");
x.t("port","1748");
x.t("port","click");
x.t("port","numbers");
x.t("described","table");
x.t("modifications","running");
x.t("protocol","srdf");
x.t("protocol","state");
x.t("protocol","error");
x.t("lan-to-wan","ratio");
x.t("note","source");
x.t("note","traffic");
x.t("enhanced","srdf");
x.t("column","click");
x.t("requiring","aggressive");
x.t("administration","example");
x.t("topics","configuring");
x.t("optionally","specify");
x.t("applications","reducible");
x.t("applications","associated");
x.t("disables","sdr");
x.t("numbers","hexadecimal");
x.t("numbers","headers");
x.t("numbers","separated");
x.t("numbers","decimal");
x.t("packet","vary");
x.t("first-pass","data");
x.t("associate","specific");
x.t("controls","adding");
x.t("storage","srdf");
x.t("storage","technologies");
x.t("storage","optimization");
x.t("storage","technology");
x.t("storage","module");
x.t("storage","data");
x.t("storage","resources");
x.t("either","equal");
x.t("individual","srdf");
x.t("separated","commas");
x.t("service","details");
x.t("service","edit");
x.t("service","viewing");
x.t("service","view");
x.t("service","adding");
x.t("special","characters");
x.t("management","console");
x.t("system","environments");
x.t("using","emc");
x.t("using","gateways");
x.t("using","storage");
x.t("unsure","array");
x.t("setting","open");
x.t("setting","default");
x.t("setting","custom");
x.t("setting","storage");
x.t("setting","rdf");
x.t("tabs","adding");
x.t("remaining","traffic");
x.t("v6.1","later");
x.t("levels","remote");
x.t("levels","optimization");
x.t("levels","newer");
x.t("overrides","current");
x.t("per","symmetrix");
x.t("adding","group");
x.t("adding","manual");
x.t("adding","removing");
x.t("adding","symmetrix");
x.t("decimal","ranging");
x.t("manually","configured");
x.t("manually","isolate");
x.t("modify","srdf");
x.t("occur","attempting");
x.t("rdf","group");
x.t("rdf","groups");
x.t("associated","group");
x.t("associated","rdf");
x.t("gige-based","port");
x.t("patterns","isolating");
x.t("isolate","optimize");
x.t("isolate","dif");
x.t("(rdf)","groups");
x.t("bandwidth","available");
x.t("dmx","vmax");
x.t("describe","policy");
x.t("position","rule");
x.t("position","click");
x.t("symmetrix","symm");
x.t("symmetrix","remote");
x.t("symmetrix","0-254");
x.t("symmetrix","group");
x.t("symmetrix","exists");
x.t("symmetrix","arrays");
x.t("symmetrix","array");
x.t("symmetrix","ports");
x.t("symmetrix","select");
x.t("symmetrix","serial");
x.t("symmetrix","alphanumeric");
x.t("symmetrix","ids");
x.t("symmetrix","configure");
x.t("symmetrix","gige");
x.t("symmetrix","choose");
x.t("symmetrix","dmx");
x.t("symmetrix","symmetrix");
x.t("symmetrix","specify");
x.t("delivers","data");
x.t("glass","view");
x.t("ranging","255");
x.t("ranging","254");
x.t("ratio","either");
x.t("specify","connection");
x.t("specify","size");
x.t("specify","address");
x.t("specify","0.0.0.0");
x.t("specify","nonstandard");
x.t("specify","port");
x.t("specify","rdf");
x.t("specify","symmetrix");
x.t("lan","side");
x.t("resources","rdf");
x.t("mainframe-attached","symmetrix");
x.t("254","cannot");
}
