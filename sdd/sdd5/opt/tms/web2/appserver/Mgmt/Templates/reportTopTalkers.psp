<%
## Copyright 2006, Riverbed Technology, Inc., All rights reserved.
## Author: Robin Schaufler
##
## This is the template for the Top Talkers report page.
%>

<%@page indentType="braces" %>
<%@page imports="Nodes, FormUtils, FormUtils:NodeEntry, ajaxentrytable, PagePresentation:Pagelet" %>
<%@page extends="Pagelet" %>

<% self.hasHelp = True %>
<% self.relatedPages = ('setupAdvNet_netflow',) %>

<psp:method name="css">
    return '''
th.rank {
  width: 60px;
}

th.wanData {
  text-align: right;
  width: 100px;
}

td.wanData {
  padding-right: 28px !important;
  text-align: right;
}
'''
</psp:method>

<psp:method name="nodeEntries">
    return {
        'topTalkersAction': NodeEntry(
            path='/stats/actions/gettoptalkers',
            type='action')
    }
</psp:method>

<psp:method name="dialogEntries">
    entries = {
        'chart': NodeEntry(
            name='chart',
            selectOptions=[('conversation', 'Conversation'),
                           ('sender', 'Sender'),
                           ('receiver', 'Receiver'),
                           ('host', 'Host'),
                           ('port', 'Application Port')]),
        'topN': NodeEntry(
            name='topN',
            type='uint8',
            widgetClass='small',
            validate=('intInRange', '[1, 50]')),
        'protocol': NodeEntry(
            name='protocol',
            selectOptions= [('tcp', 'TCP'),
                            ('udp', 'UDP'),
                            ('both', 'Both')]),
        'trafficType': NodeEntry(
            name='trafficType',
            selectOptions=[('optimized', 'Optimized'),
                           ('passthrough', 'Passthrough'),
                           ('both', 'Both')])
    }

    granularity = Nodes.present(self.session().value('mgmt'), '/rbt/sport/netflow/config/top_talkers/snapshot_interval')
    if granularity == '600':
        entries['per'] = NodeEntry(
            name='per',
            selectOptions=[('hour', 'Last Hour'),
                           ('day', 'Last Day'),
                           ('day2', 'Last 2 Days')])
    else:
        entries['per'] = NodeEntry(
            name='per',
            selectOptions=[('hour', 'Last Hour'),
                           ('day', 'Last Day')])
    return entries
</psp:method>

<%
mgmt = self.session().value('mgmt')
fields = self.request().fields()

# Options
chartField = fields.get('chart', 'conversation')
topNField = fields.get('topN', '50')
protocolField = fields.get('protocol', 'both')
trafficField = fields.get('trafficType', 'both')
perField = fields.get('per', '')
if perField == '': {
    perField = self.session().value('per', 'day')
    if perField not in ['hour', 'day', 'day2']: {
        perField = 'day'
    }
} else: {
    self.session().setValue('per', perField)
}

ajaxurl = '/mgmt/jsondata?p=reportTopTalkers&reportType=%s&topN=%s&protocol=%s&trafficType=%s&per=%s&ct='

dialogEntries = self.dialogEntries()
dialogEntries['chart'].value = chartField
dialogEntries['per'].value = perField
dialogEntries['topN'].value = topNField
dialogEntries['protocol'].value = protocolField
dialogEntries['trafficType'].value = trafficField
%>

<% self.beginPagelet() %>

<%
# Don't bother with the controls/table/JavaScript if the feature is disabled.
if (Nodes.present(mgmt, '/rbt/sport/netflow/config/top_talkers/enable') != 'true'): {
    self.write('<p>Top Talkers is currently disabled.</p>')
    self.endPagelet()
    return
}
%>

<form id="reportControlForm"
      class="graphControlForm"
      method="get"
      action="/mgmt/gui">
  <div>
    <input type="hidden" name="p" value="reportTopTalkers" />
    <table class="reportParameters">
      <tr>
        <th>Display Data By:</th>
        <th>Period:</th>
        <th>Count:</th>
        <th>Protocol:</th>
        <th>Traffic Type:</th>
        <th></th>
      </tr>
      <tr>
        <td><%= dialogEntries['chart'].html(self, format='inline') %></td>
        <td><%= dialogEntries['per'].html(self, format='inline') %></td>
        <td><%= dialogEntries['topN'].html(self, format='inline') %></td>
        <td><%= dialogEntries['protocol'].html(self, format='inline') %></td>
        <td><%= dialogEntries['trafficType'].html(self, format='inline') %></td>
        <td class="go"><%= FormUtils.renderButton(self, {'name': 'go', 'value': 'Go'}) %></td>
      </tr>
    </table>
  </div>
</form>

<%
ttConversationTable = ajaxentrytable.AjaxEntryTable('ttConversation',
    url=FormUtils.escapeForJsString(ajaxurl % ('conversation', topNField, protocolField, trafficField, perField)),
    titleText='Top Conversations',
    headerSpec=[('Rank', 'rank', "sortAttrib('id')"),
                ('IP Address 1:Port', '', "sortAttrib('src')"),
                ('IP Address 2:Port', '', "sortAttrib('dst')"),
                ('WAN Data', 'wanData', "sortAttrib('bytes')")],
    rowSpec = """[AjaxEntryTable.tdAttr('id'),
                  AjaxEntryTable.tdAttr('src'),
                  AjaxEntryTable.tdAttr('dst'),
                  AjaxEntryTable.tdAttr('bytesPretty', 'wanData')]""",
    emptyMessage='No information available about Top Conversations.',
    dataType='JSON2')

ttSrcHostOnlyTable = ajaxentrytable.AjaxEntryTable('ttSrcHostOnly',
    url=FormUtils.escapeForJsString(ajaxurl % ('src_host_only', topNField, protocolField, trafficField, perField)),
    titleText='Top Senders',
    headerSpec=[('Rank', 'rank', "sortAttrib('id')"),
                ('Source IP', '', "sortAttrib('src_ip')"),
                ('WAN Data', 'wanData', "sortAttrib('bytes')")],
    rowSpec = """[AjaxEntryTable.tdAttr('id'),
                  AjaxEntryTable.tdAttr('src_ip'),
                  AjaxEntryTable.tdAttr('bytesPretty', 'wanData')]""",
    emptyMessage='No information available about Top Senders.',
    dataType='JSON2')

ttDestHostOnlyTable = ajaxentrytable.AjaxEntryTable('ttDestHostOnly',
    url=FormUtils.escapeForJsString(ajaxurl % ('dest_host_only', topNField, protocolField, trafficField, perField)),
    titleText='Top Receivers',
    headerSpec=[('Rank', 'rank', "sortAttrib('id')"),
                ('Destination IP', '', "sortAttrib('dest_ip')"),
                ('WAN Data', 'wanData', "sortAttrib('bytes')")],
    rowSpec = """[AjaxEntryTable.tdAttr('id'),
                  AjaxEntryTable.tdAttr('dest_ip'),
                  AjaxEntryTable.tdAttr('bytesPretty', 'wanData')]""",
    emptyMessage='No information available about Top Receivers.',
    dataType='JSON2')

ttApplicationTable = ajaxentrytable.AjaxEntryTable('ttApplication',
    url=FormUtils.escapeForJsString(ajaxurl % ('app_port_only', topNField, protocolField, trafficField, perField)),
    titleText='Top Application Ports',
    headerSpec=[('Rank', 'rank', "sortAttrib('id')"),
                ('Source Port', '', "sortAttrib('src_port')"),
                ('WAN Data', 'wanData', "sortAttrib('bytes')")],
    rowSpec = """[AjaxEntryTable.tdAttr('id'),
                  AjaxEntryTable.tdAttr('src_port'),
                  AjaxEntryTable.tdAttr('bytesPretty', 'wanData')]""",
    emptyMessage='No information available about Top Application Ports.',
    dataType='JSON2')

ttIgnorePortsTable = ajaxentrytable.AjaxEntryTable('ttIgnorePorts',
    url=FormUtils.escapeForJsString(ajaxurl % ('ignore_ports', topNField, protocolField, trafficField, perField)),
    titleText='Top Hosts',
    headerSpec=[('Rank', 'rank', "sortAttrib('id')"),
                ('IP Address 1', '', "sortAttrib('src_ip')"),
                ('IP Address 2', '', "sortAttrib('dest_ip')"),
                ('WAN Data', 'wanData', "sortAttrib('bytes')")],
    rowSpec = """[AjaxEntryTable.tdAttr('id'),
                  AjaxEntryTable.tdAttr('src_ip'),
                  AjaxEntryTable.tdAttr('dest_ip'),
                  AjaxEntryTable.tdAttr('bytesPretty', 'wanData')]""",
    emptyMessage='No information available about Top Hosts.',
    dataType='JSON2')

if chartField == 'conversation': {
    table = ttConversationTable
} elif chartField == 'sender': {
    table = ttSrcHostOnlyTable
} elif chartField == 'receiver': {
    table = ttDestHostOnlyTable
} elif chartField == 'host': {
    table = ttIgnorePortsTable
} elif chartField == 'port': {
    table = ttApplicationTable
}

self.writeln(table.html(self, cssClass='midLevel'))
%>

<% self.endPagelet() %>

<script type="text/javascript">
<!--

nonConfigForms.push('reportControlForm');

//-->
</script>
