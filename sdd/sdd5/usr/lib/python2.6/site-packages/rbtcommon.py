from ctypes import *
from tms_error import tms_errcheck
from tstring import ts_free, ts_str
from rbtcommon_constants import *

librbtcommon = CDLL('librbtcommon.so')

librbtcommon.lr_asym_convert_times.argtypes = [ c_char_p, c_uint32, c_void_p ]
librbtcommon.lr_asym_convert_times.errcheck = tms_errcheck

def asym_convert_times(data, num_stamps):
    '''\
Parse the contents of an asymmetric routing table.

data - the contents of the asymmetric routing table 
num_stamps - the number of timestamps expected at the end of a table line");
'''
    ts = c_void_p()
    try:
        librbtcommon.lr_asym_convert_times(data, num_stamps, byref(ts))
        return ts_str(ts)
    finally:
        ts_free(ts)

def map_generic(value, from_value, to_value):
    if value == from_value:
        return to_value
    else:
        return value

subnet_map = {
    "0.0.0.0/0": "all-ipv4",
    "::/0": "all-ipv6",
    "::/1": "all-ip" }

def map_port(port):   return map_generic(port, '0', 'all')
def map_subnet(addr): return subnet_map.get(addr, addr)
def map_vlan(vlan):   return map_generic(vlan, '-1', 'all')
